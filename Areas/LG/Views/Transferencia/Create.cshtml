@model eRPBusiness.Transport.MovimientoAlmacenDTO
@using eRPBusiness.Helpers;
@using eRPBusiness.Common;
@{

}
<div class="row">
    <div class="col-lg-12">
        <nav class="btn-toolbar text-left titleuser">
            <a href="#" data-toggle="sidebar"><span class="glyphicon glyphicon-option-vertical"></span></a>
            <label>@ViewBag.Title</label>
        </nav>
    </div>
</div>
@Html.CRM().MenuBar("MenuBar", "onClickMenuBar", new ItemMenuBar[]{
new ItemMenuBar(MenuBarButtonType.Save,Model.Action),
new ItemMenuBar(MenuBarButtonType.Print,true),
new ItemMenuBar(MenuBarButtonType.Exit)
})
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body form-horizontal">
                @using (Html.BeginForm("", "", FormMethod.Post, new { @id = "form1" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.ValorImpuesto)
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.CRM().TextBoxFor(m => m.Codigo, "col-lg-4", "Código", "col-lg-2").Attributes(new { @placeholder = "Código", @readonly = "true" })
                            @Html.CRM().DateTimePickerFor(m => m.FechaMovimiento, "col-lg-4", "Fecha", "col-lg-2").PickerType(DateTimePickerType.Date).Attributes(new { @readonly = "true" })
                        </div>
                        <div class="form-group">
                            @if (ViewBag.IsNew)
                            {
                                @Html.CRM().Select2List("DocumentoComercialId", Model.DocumentoComercialId, @ViewBag.DocComerciaList, "col-lg-4", "Documento", "col-lg-2")
                                @Html.CRM().TextBoxButtonFor(m => m.NumeroGuiaRemision, "col-lg-4", "Nro Doc.", "col-lg-2").OnButtonClick("onClickDocumento()").FontButton("glyphicon glyphicon-search").Attributes(new { @placeholder = "Nro Guia Remisión" })
                            }
                            else
                            {
                                @Html.CRM().Select2List("DocumentoComercialId", Model.DocumentoComercialId, @ViewBag.DocComerciaList, "col-lg-4", "Documento", "col-lg-2")
                                @Html.CRM().TextBoxButtonFor(m => m.NumeroGuiaRemision, "col-lg-4", "Nro Doc.", "col-lg-2").OnButtonClick("onClickDocumento()").FontButton("glyphicon glyphicon-search").Attributes(new { @placeholder = "Nro Guia Remisión", @readonly = "true" })
                            }

                        </div>
                        <div class="form-group">

                            @if (ViewBag.IsNew)
                            {
                                @Html.CRM().Select2List("TipoMovimientoId", Model.TipoMovimientoId, @ViewBag.TipoMovimimentoList, "col-lg-4", "Movimiento", "col-lg-2", new { })
                                @Html.CRM().Select2List("TipoOperacionId", Model.TipoOperacionId, @ViewBag.TipoOperacionList, "col-lg-4", "Operación", "col-lg-2")
                            }
                            else
                            {
                                @Html.CRM().Select2List("TipoMovimientoId", Model.TipoMovimientoId, @ViewBag.TipoMovimimentoList, "col-lg-4", "Movimiento", "col-lg-2", new { })
                                @Html.CRM().Select2List("TipoOperacionId", Model.TipoOperacionId, @ViewBag.TipoOperacionList, "col-lg-4", "Operación", "col-lg-2")
                            }
                        </div>
                        <div class="form-group">
                            @if (Model.Action)
                            {
                                <label class="control-label col-md-2" for="Estado">Estado</label>
                                <div class="col-md-4">
                                    <span class="label label-success">
                                        @Html.DisplayFor(m => m.EstadoOperacion)
                                    </span>
                                </div>
                            }
                            else
                            {
                                @Html.CRM().Select2List("EstadoOperacionId", Model.EstadoOperacionId, @ViewBag.EstadoOperacionList, "col-lg-4", "Estado", "col-lg-2", new { @disabled = "disabled" })

                            }
                            @if (ViewBag.IsNew)
                            {
                                @Html.CRM().Select2List("ImpuestoId", Model.ImpuestoId, @ViewBag.ImpuestoList, "col-lg-4", "IGV", "col-lg-2",new {@onchange= "onClickOkImpuesto(this)" })
                            }
                            else
                            {
                                @Html.CRM().Select2List("ImpuestoId", Model.ImpuestoId, @ViewBag.ImpuestoList, "col-lg-4", "IGV", "col-lg-2", new { @disabled = "true" })
                            }
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.CRM().Select2List("AlmacenId", Model.AlmacenId, @ViewBag.almacenList, "col-lg-10", "Alm. Origen", "col-lg-2", new { @disabled = "disabled" })
                        </div>
                        <div class="form-group">
                            @if (ViewBag.IsNew)
                            {
                                @Html.CRM().Select2List("AlmacenDestinoId", Model.AlmacenDestinoId, @ViewBag.almacenList, "col-lg-10", "Alm. Destino", "col-lg-2")
                            }
                            else
                            {
                                @Html.CRM().Select2List("AlmacenDestinoId", Model.AlmacenDestinoId, @ViewBag.almacenList, "col-lg-10", "Alm. Destino", "col-lg-2", new { @disabled = "disabled" })
                            }
                        </div>
                        <div class="form-group">
                            @Html.CRM().Select2List("PersonalId", Model.PersonalId, ViewBag.PersonalList, "col-lg-10", "Responsable", "col-lg-2", new { @disabled = "disabled" })
                        </div>
                        <div class="form-group">
                            @Html.CRM().TextAreaFor(m => m.Observacion, "col-md-10", "Observación", "col-lg-2").Attributes(new { @placeholder = "Observaciones" })
                        </div>
                    </div>
                    @Html.HiddenFor(m => m.MovimientoAlmacenId)
                    @Html.HiddenFor(m => m.EditAction)
                }
            </div>
        </div>
    </div>

</div>
<div class="row">
    <div class="col-lg-12 col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                @Html.CRM().MenuBar("BienesMenuBar", "onClickBienesMenuBar", new ItemMenuBar[]{
                                         new ItemMenuBar(MenuBarButtonType.New,Model.Action),
                                         new ItemMenuBar(MenuBarButtonType.Edit,true),
                                         new ItemMenuBar(MenuBarButtonType.Save,true),
                                         new ItemMenuBar(MenuBarButtonType.Cancel,true)
                                     }, MenuBarType.Small)
            </div>
            <div class="panel-body" id="panel">
                <table id="jqGridDetalle"></table>
                <div id="jqGridPager"></div>
            </div>
        </div>
    </div>
</div>

@using (Html.CRM().Popup("myModalProducto", "Bienes y Servicios", "onClickOkProducto", SizePopup.Large))
{
    <div id="divProductoContent"></div>
}

<script type="text/javascript">
    var _widthPanel = $("#panel").width();
    var _heightGrid = getHeightForResize(100);
    var _valorImpuesto = parseFloat($("#ValorImpuesto").val());
    $(document).ready(function () {
        var unidadList = localStorage.getItem('unidadList');
        var marcaLista = localStorage.getItem('marcaLista');

        if (jQuery.isEmptyObject(unidadList)) {
            $.post("@Url.Action("ListUnidadMedida")", function (response) {
                sessionStorage.setItem('unidadList', addItem(response));
            });
        }
        if (jQuery.isEmptyObject(marcaLista)) {
            $.post("@Url.Action("ListarMarca")", function (response) {
                sessionStorage.setItem('marcaLista', addJqItem(response.data));
            });
        }

        $("#jqGridDetalle").jqGrid({
            url: '@Url.Action("ListarItem", "Transferencia", new { area = "lg" })',
            postData: {
                movimientoAlmacenId: function () { return $("#MovimientoAlmacenId").val(); }
            },
            mtype: "POST",
            datatype: "json",
            colModel: [
                 { label: 'Id', name: 'MovimientoAlmacenBienId', hidden: true, key: true },
                { label: '', name: 'MovimientoAlmacenId', hidden: true, formatter: 'integer' },
                { label: '', name: 'BienServicioId', hidden: true, formatter: 'integer' },
                { label: '', name: 'BienAlmacenId', hidden: true, formatter: 'integer' },
                { label: 'Código', name: 'Codigo', width: 20, sortable: false },
                { label: 'Descripción', name: 'Descripcion', width: 75, sortable: false },
                { label: 'U.M', name: 'UnidadMedidaId', width: 25, edittype: 'select', formatter: 'select', sortable: false, editable: true },
                { label: 'Marca', name: 'MarcaId', width: 30, edittype: 'select', formatter: 'select', sortable: false, editable: true, hidden: true },
                {
                    label: 'Valor Unitario', name: 'ValorUnitario', width: 20, editable: true, formatter: 'integer', align: 'right', sortable: false,
                    formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 }, editoptions: {
                        dataInit: function (elem, options) {
                            $(elem).inputmask('decimal', {
                                placeholder: "0",
                                digits: 2,
                                digitsOptional: false,
                                autoGroup: true,
                                allowPlus: false,
                                allowMinus: false,
                                clearMaskOnLostFocus: false,
                                removeMaskOnSubmit: true
                            });
                            $(elem).blur(function () {
                                var rowId = $(elem).parent().parent().attr('id');
                                var row = $('#jqGridDetalle').jqGrid("getLocalRow", rowId);
                                var valorUnitario = stringToDecimal($(elem).val());
                                var cantidad = $("#" + rowId + "_Cantidad").val();
                                if (isNaN(valorUnitario))
                                    valorUnitario = 0;

                                var costoPrecioCantidad = multiplicar(valorUnitario, cantidad);
                                var totalCostoDirecto = round(costoPrecioCantidad, 2);

                                var subTotal = parseFloat(valorUnitario * cantidad);
                                var resultadoImpuesto = parseFloat(subTotal * _valorImpuesto) / 100;
                                var totalPagar = parseFloat(subTotal + resultadoImpuesto);
                                $("#SubTotal").val(subTotal);
                                $("#Impuesto").val(resultadoImpuesto);
                                $("#TotalPedido").val(totalPagar);

                                if (cantidad > 0)
                                    $('#jqGridDetalle').jqGrid('setCell', rowId, 'SubTotal', totalCostoDirecto);

                            });
                        }
                    }
                },
                {
                     label: 'Peso Neto', name: 'PesoNeto', width: 20, editable: true, formatter: 'integer', align: 'right', sortable: false,
                     formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 }, editoptions: {
                         dataInit: function (elem, options) {
                             $(elem).inputmask('decimal', {
                                  placeholder: "0",
                                  digits: 2,
                                  digitsOptional: false,
                                  autoGroup: true,
                                  allowPlus: false,
                                  allowMinus: false,
                                  clearMaskOnLostFocus: false,
                                  removeMaskOnSubmit: true
                             });
                         }
                     }
                 },
                {
                     label: 'Peso Bruto', name: 'PesoBruto', width: 20, editable: true, formatter: 'integer', align: 'right', sortable: false,
                     formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 }, editoptions: {
                         dataInit: function (elem, options) {
                             $(elem).inputmask('decimal', {
                                  placeholder: "0",
                                  digits: 2,
                                  digitsOptional: false,
                                  autoGroup: true,
                                  allowPlus: false,
                                  allowMinus: false,
                                  clearMaskOnLostFocus: false,
                                  removeMaskOnSubmit: true
                             });
                         }
                     }
                },
                {
                    label: 'Cantidad', name: 'Cantidad', width: 20, editable: true, formatter: 'integer', align: 'right', sortable: false, formatoptions: {
                        decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2
                    }, editoptions: {
                        dataInit: function (elem, options) {
                            $(elem).inputmask('decimal', {
                                placeholder: "0",
                                digits: 2,
                                digitsOptional: false,
                                autoGroup: true,
                                allowPlus: false,
                                allowMinus: false,
                                clearMaskOnLostFocus: false,
                                removeMaskOnSubmit: true

                            });
                            $(elem).blur(function () {
                                var rowId = $(elem).parent().parent().attr('id');
                                var row = $('#jqGridDetalle').jqGrid("getLocalRow", rowId);
                                var cantidad = stringToDecimal($(elem).val());
                                var valorUnitario = $("#" + rowId + "_ValorUnitario").val();
                                if (isNaN(valorUnitario))
                                    valorUnitario = 0;

                                var costoPrecioCantidad = multiplicar(valorUnitario, cantidad);
                                var totalCostoDirecto = round(costoPrecioCantidad, 2);

                                var subTotal = parseFloat(valorUnitario * cantidad);
                                var resultadoImpuesto = parseFloat(subTotal * _valorImpuesto) / 100;
                                var totalPagar = parseFloat(subTotal + resultadoImpuesto);
                                $("#SubTotal").val(subTotal);
                                $("#Impuesto").val(resultadoImpuesto);
                                $("#TotalPedido").val(totalPagar);

                                if (cantidad > 0)
                                    $('#jqGridDetalle').jqGrid('setCell', rowId, 'SubTotal', totalCostoDirecto);

                            });
                        }
                    }
                },
                {
                    label: 'Importe', name: 'SubTotal', width: 20, editable: false, formatter: 'integer', align: 'right', sortable: false,
                    formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 }, editoptions: {
                        readonly: 'readonly',
                        dataInit: function (elem, options) {
                            $(elem).inputmask('decimal', {
                                  placeholder: "0",
                                  digits: 2,
                                  digitsOptional: false,
                                  autoGroup: true,
                                  allowPlus: false,
                                  allowMinus: false,
                                  clearMaskOnLostFocus: false,
                                  removeMaskOnSubmit: true
                            });
                        }
                    }
                },
                {
                     label: "Eliminar",
                     name: "actions",
                     width: 10,
                     sortable: false,
                     align:'center',
                     formatter: function (cellvalue, options, rowObject) {
                          return "<a href='#' id='" + options.rowId + "' onClick='fnDeleteRow(this)' ><span class='glyphicon glyphicon-trash'></span></a>";
                     }
                     /*formatter: "actions",
                     formatoptions: {
                         keys: true,
                         editOptions: {},
                         addOptions: {},
                         delOptions: {
                             beforeSubmit: function (rowid) {
                                 $(this).jqGrid('delRowData', rowid);
                             }
                         }
                     }*/
                  }

            ],
            viewrecords: true,
            rownumbers: true,
            footerrow: true,
            loadonce: true,
            //scroll: 1,
            //emptyrecords: '',
            beforeProcessing: function (data) {
                $(this).setColProp('UnidadMedidaId', { editoptions: { value: unidadList } });
                $(this).setColProp('MarcaId', { editoptions: { value: marcaLista } });
            },
            loadComplete: function () {
                var grid = $(this);
                precioVenta = grid.jqGrid('getCol', 'PrecioVenta', false, 'sum');
                cantidad = grid.jqGrid('getCol', 'Cantidad', false, 'sum');
                pesoNeto = grid.jqGrid('getCol', 'PesoNeto', false, 'sum');
                pesoBruto = grid.jqGrid('getCol', 'PesoBruto', false, 'sum');
                valorUnitario = grid.jqGrid('getCol', 'ValorUnitario', false, 'sum');
                subTotal = grid.jqGrid('getCol', 'SubTotal', false, 'sum');

                grid.jqGrid('footerData', 'set', {
                    Producto: 'Sub Total',
                    Cantidad: cantidad,
                    PesoNeto: pesoNeto,
                    PesoBruto: pesoBruto,
                    ValorUnitario: valorUnitario,
                    SubTotal: subTotal
                });

            },
            pager: "#jqGridPager",
            height: (_heightGrid - 430),
            width: _widthPanel
        });


        $("#myModalProducto").on('show.bs.modal', function () {
            $(this).find('input:text').val('');
            controllerGetAction('@Url.Action("ProductoEdit", "Transferencia")', null, 'divProductoContent', false, false, null);
        });
        $('#myModalProducto').on('hidden.bs.modal', function (e) {
            $('#divProductoContent').empty();
        });




        $("#PersonalId").select2({
            ajax: {
                url: '@Url.Action("ListarPersonal")',
                dataType: 'json',
                delay: 250,
                type: 'POST',
                data: function (params) {
                    return {
                        query: params.term // search ter
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: $.map(data.data, function (item) {
                            return {
                                text: item.RazonSocial,
                                id: item.ClienteId
                            }
                        })
                    };
                },
                cache: true
            },
            placeholder: 'Busqueda de personal responsable',
            allowClear: true,
            escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
            minimumInputLength: 1,
            language: {
                inputTooShort: function () {
                    return "Busqueda de personal responsable.";
                }
            }
        });

    });

    function fnDeleteRow(control) {
         $("#jqGridDetalle").jqGrid('delRowData', control.id);
         var ids = jQuery("#jqGridDetalle").jqGrid('getDataIDs');
         var _importe = 0;
         $.each(ids, function (item, value) {
            _importe += stringToDecimal($("#" + value + "_SubTotal").val());
            $("#jqGridDetalle").jqGrid('footerData', 'set', { SubTotal: _importe });
         });
     }

    function onClickMenuBar(key) {
        var editAction = $("#EditAction").val();
        switch (key) {
            case '@ButtonMenuBarActionConstant.SAVE':
                InsertData();
                breaktipo_mov
            case '@ButtonMenuBarActionConstant.DELETE':
                break;
            case '@ButtonMenuBarActionConstant.EXIT':
                controllerGetAction('@Url.Action("Bandeja", "Transferencia", new { area = "LG" })', null, 'workspace', false, false, null);
                break;
        }
    }



    function InsertData() {

        if (isEmptyElement("FechaMovimiento", "Seleccione fecha"))
            return false;

        if (isEmptyElement("DocumentoComercialId", "Seleccione documento comercial"))
            return false;


        if (isEmptyElement("TipoMovimientoId", "Seleccione movimiento."))
            return false;

        if (isEmptyElement("TipoOperacionId", "Seleccione operación."))
            return false;

        if (isEmptyElement("AlmacenId", "Seleccione un almacen."))
            return false;

        if (isEmptyElement("AlmacenDestinoId", "Seleccione un almacen destino."))
            return false;

        if ($("#AlmacenId").val() === $("#AlmacenDestinoId").val()) {
            MsgAlert(3, "Seleccione un almacen diferente.");
            return false;
        }



        gridDataIDs('jqGridDetalle').forEach(function (index) {
            $("#jqGridDetalle").jqGrid('saveRow', index, { url: 'clientArray' });
        });

        var form = $('#form1');
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        var disabled = form.find('select:disabled').removeAttr('disabled');

        var data = $('#jqGridDetalle').getRowData();
        var jsonData = {
            __RequestVerificationToken: token,
            Header: JSON.stringify($(form).serializeObject()),
            Row: JSON.stringify(data),
            EditAction: $("#EditAction").val(),
            Detail: JSON.stringify($('#form3').serializeObject())
        };
        controllerSaveResponse("@Url.Action("Create", "Transferencia", new { area = "LG" })", jsonData, true, true, function (response) {
            if (response.success) {
                MsgAlert(1, response.message);
                controllerGetAction('@Url.Action("Bandeja", "Transferencia", new { area = "LG" })', null, 'workspace', false, false, null);
            } else {
                MsgAlert(4, response.message);
            }
        });
    }

    function onClickRowProducto(row) {
        $("#ProductoId").val(row.ProductoId);
        $("#Producto").val(row.Codigo);
        $("#Descripcion").val(row.Descripcion);
        $("#myModalProducto").modal('hide');
    };

     function onClickOkImpuesto() {

          var jsonList = [];
            var selectedIDs = $('#jqGridDetalle').jqGrid('getGridParam', 'data');
            $.each(selectedIDs, function (item, value) {
                jsonList.push(value);
            });

            var rowList = _.map(jsonList, 'BienServicioId');
            var rowObject = [];
            jQuery.ajax({
                type: 'POST',
                url: '@Url.Action("ListarBienPrecio")',
                dataType: 'json',
                cache: false,
                data: {
                    data: JSON.stringify(rowList),
                    monedaId: $("#MonedaId").val(),
                    impuestoId: $("#ImpuestoId").val()
                },
                success: function (response) {
                    if (response.success) {
                        $('#jqGridDetalle').jqGrid('clearGridData');
                        $.each(response.data.lista, function (item, value) {
                            var bienServicios = {
                                MovimientoAlmacenBienId: 0,
                                MovimientoAlmacenId: 0,
                                BienAlmacenId: value.BienAlmacenId,
                                BienServicioId: value.BienServicioId,
                                Codigo: value.Codigo,
                                CodigoComercial: value.CodigoComercial,
                                Descripcion: value.Descripcion,
                                MarcaId: value.MarcaId,
                                Control: 0,
                                UnidadMedidaId: value.UnidadMedidaId,
                                PrecioVenta: value.PrecioVenta,
                                Cantidad: cantidad,
                                ValorUnitario: value.ValorUnitario,
                                Importe: cantidad * value.ValorUnitario,
                                StockSistema: value.StockSistema,
                                Cantidad: value.StockSistema
                            };
                            rowObject.push(bienServicios);
                        });
                    } else {
                        MsgAlert(3, response.message);
                    }

                },
                async: false
            });

            var newRowId;
            $.each(rowObject, function (item, value) {
                newRowId = gridRowCount("jqGridDetalle");
                var count = newRowId + 1;
                var cantidad = 1;
                var setcelll = {
                    rowID: newRowId + 1,
                    initdata: {
                        MovimientoAlmacenBienId: 0,
                        MovimientoAlmacenId: 0,
                        BienAlmacenId: value.BienAlmacenId,
                        BienServicioId: value.BienServicioId,
                        Codigo: value.Codigo,
                        CodigoComercial: value.CodigoComercial,
                        Descripcion: value.Descripcion,
                        MarcaId: value.MarcaId,
                        Control: 0,
                        UnidadMedidaId: value.UnidadMedidaId,
                        PrecioVenta: value.PrecioVenta,
                        Cantidad: cantidad,
                        ValorUnitario: value.ValorUnitario,
                        Importe: cantidad * value.ValorUnitario,
                        StockSistema: value.StockSistema,
                        Cantidad: value.StockSistema
                    },
                    position: "afterSelected"
                };
                jQuery("#jqGridDetalle").jqGrid('addRow', setcelll);
            });
    }

    function onClickOkProducto() {


         var rowKey = jQuery("#jqGridProducto").getGridParam("selrow");
        if (!isEmpty(rowKey)) {

            var jsonList = [];
            var selectedIDs = jQuery("#jqGridProducto").getGridParam("selarrrow");
            $.each(selectedIDs, function (item, value) {
                var rows = jQuery('#jqGridProducto').getRowData(value);
                jsonList.push(jQuery('#jqGridProducto').getRowData(value));
            });

            var rowList = _.map(jsonList, 'BienServicioId');
            var rowObject = [];
            jQuery.ajax({
                type: 'POST',
                url: '@Url.Action("ListarBienPrecio")',
                dataType: 'json',
                cache: false,
                data: {
                    data: JSON.stringify(rowList),
                    monedaId: $("#MonedaId").val(),
                    impuestoId: $("#ImpuestoId").val()
                },
                success: function (response) {
                    if (response.success) {
                        $.each(response.data.lista, function (item, value) {
                            var bienServicios = {
                                MovimientoAlmacenBienId: 0,
                                MovimientoAlmacenId: 0,
                                BienAlmacenId: value.BienAlmacenId,
                                BienServicioId: value.BienServicioId,
                                Codigo: value.Codigo,
                                CodigoComercial: value.CodigoComercial,
                                Descripcion: value.Descripcion,
                                MarcaId: value.MarcaId,
                                Control: 0,
                                UnidadMedidaId: value.UnidadMedidaId,
                                PrecioVenta: value.PrecioVenta,
                                Cantidad: cantidad,
                                ValorUnitario: value.ValorUnitario,
                                Importe: cantidad * value.ValorUnitario,
                                StockSistema: value.StockSistema,
                                Cantidad: value.StockSistema
                            };
                            rowObject.push(bienServicios);
                        });
                    } else {
                        MsgAlert(3, response.message);
                    }

                },
                async: false
            });

            var newRowId;
            $.each(rowObject, function (item, value) {
                newRowId = gridRowCount("jqGridDetalle");
                var count = newRowId + 1;
                var cantidad = 1;
                var setcelll = {
                    rowID: newRowId + 1,
                    initdata: {
                        MovimientoAlmacenBienId: 0,
                        MovimientoAlmacenId: 0,
                        BienAlmacenId: value.BienAlmacenId,
                        BienServicioId: value.BienServicioId,
                        Codigo: value.Codigo,
                        CodigoComercial: value.CodigoComercial,
                        Descripcion: value.Descripcion,
                        MarcaId: value.MarcaId,
                        Control: 0,
                        UnidadMedidaId: value.UnidadMedidaId,
                        PrecioVenta: value.PrecioVenta,
                        Cantidad: cantidad,
                        ValorUnitario: value.ValorUnitario,
                        Importe: cantidad * value.ValorUnitario,
                        StockSistema: value.StockSistema,
                        Cantidad: value.StockSistema
                    },
                    position: "afterSelected"
                };
                jQuery("#jqGridDetalle").jqGrid('addRow', setcelll);
            });

            jQuery("#myModalProducto").modal('hide');

        } else {
            MsgAlert(2, 'Seleccione almenos un articulo.');
        }

    }

       function onChangeMovimiento(control) {
        $.post('@Url.Action("GetTipoOperacion", "Transferencia")',
         {
             tipoMovimientoId: control.value
         }, function (response) {
             $('#TipoOperacionId').find('option').remove().end();
             $("#TipoOperacionId").addItems(response.data);
             $("#TipoOperacionId").prop("disabled", false);
         });
    };

    function onClickBienesMenuBar(key) {
        switch (key) {
            case "@ButtonMenuBarActionConstant.NEW":
                $('#myModalProducto').modal('show');
                break;
            case "@ButtonMenuBarActionConstant.SAVE":
                break;
            case "@ButtonMenuBarActionConstant.EDIT":
                break;
            case '@ButtonMenuBarActionConstant.CANCEL':
                break;
        }
    };

    function onClickDocumento() {

    }
</script>
