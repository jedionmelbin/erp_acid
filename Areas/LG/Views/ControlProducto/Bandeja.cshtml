@using eRPBusiness.Helpers
@using eRPBusiness.Common
@{
    ViewData["Title"] = "Index";
}
<div class="row">
    <div class="col-lg-12">
        <nav class="btn-toolbar text-left titleuser">
            <a href="#" data-toggle="sidebar"><span class="glyphicon glyphicon-option-vertical"></span></a>
            <label>Control Producto</label>
        </nav>
    </div>
</div>
@Html.CRM().MenuBar("MenuBar", "onClickMenuBar", new ItemMenuBar[]{
                           new ItemMenuBar(MenuBarButtonType.ImportXls,true),
                           new ItemMenuBar(MenuBarButtonType.Print,false),
                           new ItemMenuBar(MenuBarButtonType.ExportXls)
                       })
<div class="row">
    <div class="col-lg-12" id="seachPanel">
        <div class="panel panel-default">
            <div class="panel-body form-horizontal">
                <div class="col-lg-11">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.CRM().TextBox("Codigo", null, "col-lg-4 col-md-4", "Código", "col-lg-2").Attributes(new { @placeholder = "Código" })
                            @Html.CRM().TextBox("NumLote", null, "col-lg-4 col-md-4", "Nro Lote", "col-lg-2").Attributes(new { @placeholder = "Nro Lote" })
                        </div>
                        <div class="form-group">
                            @Html.CRM().DateTimePicker("FechaInicio", null, "col-lg-4 col-md-4", "F. Inicio", "col-lg-2").PickerType(DateTimePickerType.Date).Attributes(new { @placeholder = "Fecha Inicio" })
                            @Html.CRM().DateTimePicker("FechaFinal", null, "col-lg-4 col-md-4", "F. Final", "col-lg-2").PickerType(DateTimePickerType.Date).Attributes(new { @placeholder = "Fecha Final" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.CRM().TextBox("RazonSocial", null, "col-lg-10", "Proveedor", "col-lg-2").Attributes(new { @placeholder = "Razon Social" })
                        </div>
                        <div class="form-group">
                            @Html.CRM().TextBox("Producto", null, "col-lg-10", "Producto", "col-lg-2").Attributes(new { @placeholder = "Busqueda de producto" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-1">
                    <div class="form-group">
                        @(Html.CRM().InputButton("buttonBuscar", new { Styles = "width:100%" }).ElementType(ButtonElementType.Button).Value("Buscar").OnClick("$('#jqGridProduct').jqGrid('setGridParam',{datatype:'json'}).trigger('reloadGrid');"))
                    </div>
                    <div class="form-group">
                        @(Html.CRM().InputButton("buttonBuscar", new { Styles = "width:100%" }).ElementType(ButtonElementType.Button).Value("Limpiar").OnClick("$('input:text').val(''); $('#jqGridProduct').jqGrid('setGridParam',{datatype:'json'}).trigger('reloadGrid');"))
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-12" id="bandeja">
        <div class="panel panel-default">
            <div class="panel-body" id="panel">
                <table id="jqGridProduct"></table>
                <div id="jqGridPager"></div>
            </div>
        </div>
    </div>
</div>



<script type="text/javascript">
    var _heightGrid = getHeightForResize(75);
    var _widthPanel = $("#panel").width();
    $(document).ready(function () {

        $("#jqGridProduct").jqGrid({
            url: '@Url.Action("ListarBandeja", "ControlProducto", new { area = "lg" })',
            mtype: "POST",
            postData: {
                codigo: function () { return $("#Codigo").val() },
                numeroLote: function () { return $("#NumLote").val() },
                fechaInicio: function () { return $("#FechaInicio").val() },
                fechaFinal: function () { return $("#FechaFinal").val() },
                descripcion: function () { return $("#Producto").val() },
                
            },
            datatype: "json",
            colModel: [
                { label: '', name: 'BienControlId', key: true, hidden: true },
                { label: 'Código', name: 'Codigo', width: 10, sortable: false, align: 'center' },
                { label: 'Estado', name: 'TextoEstado', width: 10, sortable: false, hidden:true },
                { label: 'Estado', name: 'LetraEstado', width: 10, sortable: false, formatter: colorCell, align: 'center' },
                { label: 'Nro Serie', name: 'NumeroSerie', width: 15, sortable: false },
                { label: 'Nro Lote', name: 'NumeroLote', width: 15, sortable: false },
                { label: 'Producto', name: 'Descripcion', width: 30, sortable: false },
                { label: 'Marca', name: 'Marca', width: 15, sortable: false },
                { label: 'U.M', name: 'Abreaviatura', width: 10, sortable: false },
                { label: 'Fecha Ingreso', name: 'FechaIngreso', width: 10, sortable: false,align:'center'},
                { label: 'Fecha Expiración', name: 'FechaExpira', width: 10, align: 'center', sortable: false, align:'center' },
                { label: 'Nro Dias', name: 'Dias', width: 8, align: 'center', sortable: false },
                { label: 'Stock', name: 'Cantidad', width: 10, sortable: false, align: 'right', formatter: 'integer', formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },

            ],
            viewrecords: true,
            loadonce: true,
            height: (_heightGrid - 130),
            width: _widthPanel,
            rowNum: 20,
            rowList: [10, 20, 30],
            rownumbers: true,
            onSelectRow: function (rowId) {


            },
            loadComplete: function () {
                var rows = $(this).getDataIDs();
                $.each(rows, function (item, value) {
                    jQuery("#jqGridProduct").setCell(value, 'FechaIngreso', '', { 'color': 'red', 'font-weight': 'bold' });
                    jQuery("#jqGridProduct").setCell(value, 'FechaExpira', '', { 'color': 'red', 'font-weight': 'bold' });
                    jQuery("#jqGridProduct").setCell(value, 'Dias', '', { 'color': 'red', 'font-weight': 'bold' });
                    jQuery("#jqGridProduct").setCell(value, 'Cantidad', '', { 'color': 'blue', 'font-weight': 'bold' });
                });
            },
            pager: "#jqGridPager"
        });
    });


    function colorCell(cellvalue, options, rowObject) {
        var backgroud = '', colorHex = '';
        switch (rowObject.LetraEstado) {
            case '@LetraConstante.V':
                colorHex = '#63DB93';
                break;
            case '@LetraConstante.R':
                colorHex = '#F7D736';
                break;
            case '@LetraConstante.E':
                colorHex = '#E03D0F';
                break;
            default:
                return cellvalue;
                break;
        }
        backgroud = '<span style="background-color: ' + colorHex + '; display: block; width: 100%; height: 100%; color:#FFF;font-weight: bold; ">' + rowObject.TextoEstado + '</span>';
        return backgroud;
     }

    function onClickMenuBar(control) {

        var postData = {
            editAction: '',
            movimientoAlmacenId: 0
        };
        var row = getGridSelectedRow("jqGridProduct");
        switch (control) {
            case "@ButtonMenuBarActionConstant.NEW":
                postData.editAction = '@EditActionConstant.NEW';
                controllerGetAction('@Url.Action("Create", "Inventario", new { area = "LG" })', postData, 'workspace', true, true, null);
                break;
            case "@ButtonMenuBarActionConstant.EDIT":
                if (!isEmpty(row)) {
                    postData.editAction = '@EditActionConstant.EDIT';
                    postData.movimientoAlmacenId = row.MovimientoAlmacenId;
                    controllerGetAction('@Url.Action("Create", "Inventario", new { area = "LG" })', postData, 'workspace', true, true, null);
                } else {
                    MsgAlert(3, 'Seleccione un inventario para ver el detalle');
                }
                break;
           case "@ButtonMenuBarActionConstant.PRINT":

                if (!isEmpty(row)) {
                     var url = '@Url.Action("Reporte", "Inventario", new { @movimientoId = "value2"})';
                    var _urlPdf = url.replaPe("value2", row.MovimientoAlmacenId);
                     PDFObject.embed(_urlPdf, "#PDFViewer");
                     $("#myModalReporte").modal('show');

                } else {
                    MsgAlert(3, 'Seleccione un inventario para ver el detalle');
                }

                break;
            case "@ButtonMenuBarActionConstant.IMPORT_XLS":
                $("#myModal").modal('show');
                break;
            case "@ButtonMenuBarActionConstant.EXPORT_XLS":
                $.fileDownload('@Url.Action("ExportControl")', {
                    httpMethod: 'POST',
                    dataType: "json",
                    contentType: "application/json",
                    data: {
                        codigo: function () { return $("#Codigo").val() },
                        fechaInicio: function () { return $("#FechaInicio").val() },
                        fechaFinal: function () { return $("#FechaFinal").val() },
                        descripcion: function () { return $("#Producto").val() },
                    },
                    successCallback: function (url) {

                    },
                    failCallback: function (responseHtml, url) {

                    }
                });
                break;

        }
    };

    function onChangeDocComercial()
    {
        $('#jqGridProduct').jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
    };

    function onChangeAlmacen() {
        $('#jqGridProduct').jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
    };

    function onClickOkFileUpload() {
        var formdata = new FormData();
        var fileInput = document.getElementById('fileUpload');
        var filename = fileInput.files[0].name
        var extension = filename.split('.').pop().toUpperCase();
        if (extension != "XLS" && extension != "XLSX") {
            alert();
        }
        else {
            for (i = 0; i < fileInput.files.length; i++) {
                formdata.append('fileBase', fileInput.files[i]);
            }

          $.ajax({
            url:  '@Url.Action("ReadExcelFile")',
            type: 'POST',
            data: formdata,
            async: false,
            success: function (data) {

            },
            cache: false,
            contentType: false,
            processData: false
            });
        }

    }
</script>
