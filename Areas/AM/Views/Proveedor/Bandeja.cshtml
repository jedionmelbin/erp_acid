@using eRPBusiness.Helpers
@{
    ViewData["Title"] = "Index";
}
<div class="row">
    <div class="col-lg-12">
        <nav class="btn-toolbar text-left titleuser">
            <a href="#" data-toggle="sidebar"><span class="glyphicon glyphicon-option-vertical"></span></a>
            <label> Listado Proveedor</label>
        </nav>
    </div>
</div>
@Html.CRM().MenuBar("MenuBar", "onClickMenuBar", new ItemMenuBar[]{
                                                   new ItemMenuBar(MenuBarButtonType.New),
                                                   new ItemMenuBar(MenuBarButtonType.Edit),
                                                   new ItemMenuBar(MenuBarButtonType.Delete,true),
                                                   new  ItemMenuBar(MenuBarButtonType.Formato,false),
                                                   new ItemMenuBar(MenuBarButtonType.ImportXls,false),
                                                   new ItemMenuBar(MenuBarButtonType.ExportXls)
                                               })
<div class="row">
    <div class="col-lg-12" id="seachPanel">
        <div class="panel panel-default">
            <div class="panel-body form-horizontal" id="panelSeach">
                <div class="col-lg-11">
                    <div class="form-group">
                        @Html.CRM().TextBox("NumeroDocumento", null, "col-lg-4", "Numero Documento", "col-lg-2").Attributes(new { @placeholder = "DNI/RUC" })
                        @Html.CRM().TextBox("RazonSocial", null, "col-lg-4", "Razon Social", "col-lg-2").Attributes(new { @placeholder = "Razon Social" })
                    </div>
                    <div class="form-group">
                        @Html.CRM().TextBox("Nombre", null, "col-lg-4", "Nombre", "col-lg-2").Attributes(new { @placeholder = "Nombre Comercial" })
                    </div>
                </div>
                <div class="col-lg-1">
                    <div class="form-group">
                        @(Html.CRM().InputButton("buttonBuscar", new { Styles = "width:100%" }).ElementType(ButtonElementType.Button).Value("Buscar").OnClick("$('#jqGridCliente').jqGrid('setGridParam',{datatype:'json'}).trigger('reloadGrid');"))
                    </div>
                    <div class="form-group">
                        @(Html.CRM().InputButton("buttonBuscar", new { Styles = "width:100%" }).ElementType(ButtonElementType.Button).Value("Limpiar").OnClick("$('input:text').val(''); $('#jqGridCliente').jqGrid('setGridParam',{datatype:'json'}).trigger('reloadGrid');"))
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-12" id="bandeja">
        <div class="panel panel-default">
            <div class="panel-body" id="panel">
                <table id="jqGridProveedor"></table>
                <div id="jqGridPager"></div>
            </div>
        </div>
    </div>
</div>

@using (Html.CRM().Popup("myModal", "File Upload", "onClickOkFileUpload", SizePopup.Small))
{
    <div id="modalContent">
        <form class="form-horizontal">
            <div class="form-group">
                <label class="control-label col-lg-2">Archivo</label>
                <div class="col-lg-12">
                    <input type="file" name="fileUpload" id="fileUpload" class="form-control" />
                </div>
            </div>
        </form>
    </div>
}

<script type="text/javascript">
    var _heightGrid = getHeightForResize(75);
    var _widthPanel = $("#panel").width();

    $(document).ready(function () {

        $("#jqGridProveedor").jqGrid({
            url: '@Url.Action("ListarBandeja", "Proveedor", new { area = "AM" })',
            mtype: "POST",
            postData: {
                numeroDocumento: function () { return $("#NumeroDocumento").val() },
                razonSocial: function () { return $("#RazonSocial").val() },
                nombre: function () { return $("#Nombre").val() }
            },
            datatype: "json",
            colModel: [
                { label: 'Id', name: 'ClienteId', key: true, hidden: true },
                { label: 'Tipo', name: 'TipoProveedor', width: 18 },
                { label: 'Nro Documento', name: 'NumeroDocumento', width: 18 },
                { label: 'Razon Social', name: 'RazonSocial', width: 35 },
                { label: 'N. Comercial', name: 'NombreComercial', width: 35 },
                { label: 'Departamento', name: 'Departamento', width: 15 },
                { label: 'Provincia', name: 'Provincia', width: 15 },
                { label: 'Distrito', name: 'Distrito', width: 15 },
                { label: 'Telefonos', name: 'Telefono', width: 15 }
            ],
            viewrecords: true,
            loadonce: true,
            height: (_heightGrid - 160),
            width: _widthPanel,
            rowNum: 20,
            rowList: [10, 20, 30],
            subGrid: true,
            rownumbers: true, // show row numbers
            subGridRowExpanded: showChildGrid, subGridOptions: {
                reloadOnExpand: false,
                selectOnExpand: true
            },
            pager: "#jqGridPager"
        });
    });

    function showChildGrid(parentRowID, parentRowKey) {
        var rowData = jQuery("#jqGridProveedor").getRowData(parentRowKey);
        var childGridID = parentRowID + "_table";
        var childGridPagerID = parentRowID + "_pager";
        var childGridURL = parentRowKey + ".json";
        $('#' + parentRowID).append('<table id=' + childGridID + '></table><div id=' + childGridPagerID + ' class=scroll></div>');

        $("#" + childGridID).jqGrid({
            url: '@Url.Action("ListarContacto", "Cliente", new { area = "AM" })',
            mtype: "POST",
            postData: {
                ClienteId: rowData["ClienteId"]
            },
            datatype: "json",
            page: 1,
            colModel: [
                { label: '', name: 'ContactoId', key: true, hidden: true },
                { label: 'Contacto', name: 'Nombres', width: 120 },
                { label: 'Nro. documento', name: 'NumeroDocumento', width: 50 },
                { label: 'Telefono', name: 'Telefono', width: 50 },
                { label: 'Dirección', name: 'Direccion', width: 150 },

            ],
            loadonce: true,
            width: 965,
            height: '100%',
            footerrow: true,
            loadComplete: function () {
                var grid = $(this);
                total = grid.jqGrid('getCol', 'SubTotal', false, 'sum');
                grid.jqGrid('footerData', 'set', { Producto: 'Total', PrecioVenta: 0, Cantidad: 0, SubTotal: total });

            },
            pager: "#" + childGridPagerID
        });
    }
    function onClickMenuBar(control) {

        var postData = {
            editAction: '',
            ClienteId: 0
        };
        var row = getGridSelectedRow("jqGridProveedor");
        switch (control) {
            case "@ButtonMenuBarActionConstant.NEW":
                postData.editAction = '@EditActionConstant.NEW';
                controllerGetAction('@Url.Action("Create", "Proveedor", new { area = "AM" })', postData, 'workspace', true, true, null);
                break;
            case "@ButtonMenuBarActionConstant.EDIT":
                if (!isEmpty(row)) {
                    postData.editAction = '@EditActionConstant.EDIT';
                    postData.ClienteId = row.ClienteId;
                    controllerGetAction('@Url.Action("Create", "Proveedor", new { area = "AM" })', postData, 'workspace', true, true, null);
                } else {
                    MsgAlert(3, 'Seleccione un proveedor');
                }
                break;
              case "@ButtonMenuBarActionConstant.IMPORT_XLS":
                $("#myModal").modal('show');
                break;
            case "@ButtonMenuBarActionConstant.EXPORT_XLS":
                $.fileDownload('@Url.Action("ExportProveedor")', {
                    httpMethod: 'POST',
                    dataType: "json",
                    contentType: "application/json",
                    data: {
                        definicion: function () { return $("#Definicion").val(); },
                        um: function () { return $("#um").val(); },
                        precioventa: function () { return $("#PrecioVenta").val(); }

                    },
                    successCallback: function (url) {

                    },
                    failCallback: function (responseHtml, url) {

                    }
                });
                break;
               case "@ButtonMenuBarActionConstant.FORMATO": 
                $.fileDownload('@Url.Action("DownloadFormat")', {
                    httpMethod: 'POST',
                    dataType: "json",
                    contentType: "application/json",
                    data: {

                    },
                    successCallback: function (url) {

                    },
                    failCallback: function (responseHtml, url) {

                    }
                });
                break;
        }
    };
    function onClickOkFileUpload() {
        var formdata = new FormData();
        var fileInput = document.getElementById('fileUpload');
        var filename = fileInput.files[0].name;
        var extension = filename.split('.').pop().toUpperCase();
        if (extension !== "XLS" && extension !== "XLSX") {
            alert();
        }
        else {
            for (i = 0; i < fileInput.files.length; i++) {
                formdata.append('fileBase', fileInput.files[i]);
            }

            $.ajax({
                url: '@Url.Action("ReadExcelFile")',
                type: 'POST',
                data: formdata,
                async: false,
                success: function (response) {
                    $("#myModal").modal('hide');
                    if (response.success) {
                        MsgAlert(1, response.message);
                        $('#jqGridProveedor').jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                    } else {
                        MsgAlert(4, response.message);
                    }
                },
                cache: false,
                contentType: false,
                processData: false
            });
        }

    }

</script>

