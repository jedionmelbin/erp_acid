@model eRPBusiness.Transport.ContactoDTO
@using eRPBusiness.Helpers
<div class="row">
    <div class="col-lg-12">
        <nav class="btn-toolbar text-left titleuser">
            <a href="#" data-toggle="sidebar"><span class="glyphicon glyphicon-option-vertical"></span></a>
            <label>@ViewBag.Title</label>
        </nav>
    </div>
</div>
@Html.CRM().MenuBar("MenuBar", "onClickMenuBar", new ItemMenuBar[]{
                                       new ItemMenuBar(MenuBarButtonType.Save),
                                       new ItemMenuBar(MenuBarButtonType.Exit)

                                   })
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body">
                @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal", @id = "form1" }))
                {
                    @Html.AntiForgeryToken()
                <div class="col-lg-6">
                    <div class="form-group">
                        @Html.CRM().Select2List("AreaId", Model.AreaId, @ViewBag.AreaList, "col-lg-10", "Area", "col-lg-2")
                    </div>
                    <div class="form-group">
                        @Html.CRM().TextBoxFor(m => m.NombreContacto, "col-lg-10", "Nombre", "col-lg-2")
                    </div>
                    <div class="form-group">
                        @Html.CRM().TextBoxFor(m => m.EmailContacto, "col-lg-10", "Email", "col-lg-2")
                    </div>
                    <div class="form-group">
                        @Html.CRM().TextBoxFor(m => m.DireccionContacto, "col-lg-10", "Dirección", "col-lg-2")
                    </div>
                </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.CRM().TextBoxFor(m => m.NumeroDocumentoContacto, "col-lg-10", "Nro Doc.", "col-lg-2")
                        </div>
                        <div class="form-group">
                            @Html.CRM().TextBoxFor(m => m.TelefonoContacto, "col-lg-4", "Telefono", "col-lg-2")
                            @Html.CRM().TextBoxFor(m => m.CelularContacto, "col-lg-4", "Celular", "col-lg-2")
                        </div>
                    </div>
                    @Html.HiddenFor(m => m.ContactoId)
                    @Html.HiddenFor(m => m.EditAction)
                }

            </div>
        </div>
    </div>

</div>


<script type="text/javascript">
   

    function onClickMenuBar(control) {
        switch (control) {
            case '@ButtonMenuBarActionConstant.SAVE':
                saveData(control);
                break;
            case '@ButtonMenuBarActionConstant.DELETE':

                break;
            case '@ButtonMenuBarActionConstant.EXIT':
                controllerGetAction('@Url.Action("Bandeja", "Contacto", new { area = "AM" })', null, 'workspace', false, false, null);
                break;
        }

    };

    function saveData() {
        if (isEmptyElement("AreaId", "Seleccione area"))
            return false;

        if (isEmptyElement("NombreContacto", "Ingrese el campo nombre completo"))
            return false;

        if (isEmptyElement("EmailContacto", "Ingrese el campo Email"))
            return false;

        var form = $('#form1');
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        var jsonData = {
            __RequestVerificationToken: token,
            Header: JSON.stringify($('#form1').serializeObject()),
            EditAction: $("#EditAction").val()
        };
        controllerSaveResponse("@Url.Action("Create", "Contacto", new { area = "AM" })", jsonData, false, false, function (response) {
            if (response.success) {
                MsgAlert(1, response.message);
                controllerGetAction('@Url.Action("Bandeja", "Contacto", new { area = "AM" })', null, 'workspace', false, false, null);
            } else {
                MsgAlert(4, response.message);
            }
        });
    }
</script>