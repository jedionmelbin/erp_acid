@model eRPBusiness.Transport.OrdenDTO
@using eRPBusiness.Helpers;
@using eRPBusiness.Common;
@{

}
<div class="row">
    <div class="col-lg-12">
        <nav class="btn-toolbar text-left titleuser">
            <a href="#" data-toggle="sidebar"><span class="glyphicon glyphicon-option-vertical"></span></a>
            <label>@ViewBag.Title</label>
        </nav>
    </div>
</div>
@Html.CRM().MenuBar("MenuBar", "onClickMenuBar", new ItemMenuBar[]{
                           new ItemMenuBar(MenuBarButtonType.Save),
                           new ItemMenuBar(MenuBarButtonType.Print,true),
                           new ItemMenuBar(MenuBarButtonType.Mail,true),
                           new ItemMenuBar(MenuBarButtonType.Exit)
                       })
<div class="row">
    <div class="col-lg-12" id="ContentHeader">
        <div class="panel panel-default">
            <div class="panel-body form-horizontal">
                @using (Html.BeginForm("", "", FormMethod.Post, new { @id = "form1" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.OrdenId)
                    @Html.HiddenFor(m => m.PersonalId)
                    @Html.HiddenFor(m => m.MontoImpuesto)
                    @Html.HiddenFor(m => m.EditAction)
                    @Html.HiddenFor(m => m.FlagImpuesto)
                    @Html.HiddenFor(m => m.EstadoLetra)
                    <div class="col-md-6">
                        <div class="form-group">
                            @if (ViewBag.IsNew)
                            {
                                @Html.CRM().DropDownList("SerieId", Model.SerieId, @ViewBag.SerieList, "col-lg-2", "Serie", "col-lg-2") }
                            else
                            {
                                @Html.CRM().DropDownList("SerieId", Model.SerieId, @ViewBag.SerieList, "col-lg-2", "Serie", "col-lg-2", new { @disabled = "disabled" })
                            }

                            <div class="col-lg-4">
                                @Html.TextBoxFor(m => m.Codigo, new { @class = "form-control", @placeholder = "Nro Factura", @readonly = "true" })
                            </div>
                            @if (ViewBag.IsNew)
                            {
                                @Html.CRM().DropDownList("DocumentoComercialId", Model.DocumentoComercialId, @ViewBag.DocComerciaList, "col-lg-4", "", "col-lg-2", new { @disabled = "disabled" })
                            }
                            else
                            {
                                @Html.CRM().DropDownList("DocumentoComercialId", Model.DocumentoComercialId, @ViewBag.DocComerciaList, "col-lg-4", "", "col-lg-2", new { @disabled = "disabled" })
                            }
                        </div>
                        <div class="form-group">
                            @Html.CRM().DateTimePickerFor(m => m.FechaEmision, "col-lg-4", "F. Emision", "col-lg-2").PickerType(DateTimePickerType.DateTime).Attributes(new { })
                            @Html.CRM().DateTimePickerFor(m => m.FechaEntrega, "col-lg-4", "F. Venci.", "col-lg-2").PickerType(DateTimePickerType.Date).Attributes(new { @placeholder = "Fecha Vencimiento" })
                        </div>
                        <div class="form-group">
                            @if (ViewBag.IsNew)
                            {
                                @Html.CRM().DropDownList("FormaPagoId", Model.FormaPagoId, @ViewBag.FormaPago, "col-lg-4", "Cond. de Pago", "col-lg-2",new { @onchange = "onChangeFormaPago(this)" })
                            }
                            else
                            {
                                @Html.CRM().DropDownList("FormaPagoId", Model.FormaPagoId, @ViewBag.FormaPago, "col-lg-4", "Cond. de Pago", "col-lg-2", new { @disabled = "disabled" })
                            }
                            @Html.CRM().NumericTextBoxFor(m => m.TipoCambio, "col-lg-4", "Tipo Cambio", "col-lg-2").TextNumericType(NumericType.Decimal).CantidadEnteros(14).CantidadDecimales(2).Attributes(new { })
                        </div>
                        <div class="form-group">
                            @if (ViewBag.IsNew)
                            {
                                @Html.CRM().DropDownList("TipoMovimientoId", Model.TipoMovimientoId, @ViewBag.TipoMovimimentoList, "col-lg-4", "Concepto", "col-lg-2", new { @onchange = "onChangeMovimiento(this)" })

                                @Html.CRM().DropDownList("TipoOperacionId", Model.TipoOperacionId, @ViewBag.TipoOperacionList, "col-lg-4", "Operación", "col-lg-2")
                            }
                            else
                            {
                                @Html.CRM().DropDownList("TipoMovimientoId", Model.TipoMovimientoId, @ViewBag.TipoMovimimentoList, "col-lg-4", "Movimiento", "col-lg-2", new { @onchange = "onChangeMovimiento(this)", @disabled = "disabled" })
                                @Html.CRM().DropDownList("TipoOperacionId", Model.TipoOperacionId, @ViewBag.TipoOperacionList, "col-lg-4", "Operación", "col-lg-2", new { @disabled = "disabled" })
                            }
                        </div>
                        <div class="form-group">
                            @Html.CRM().TextBoxButtonFor(m => m.NumeroOrdenCompra, "col-lg-4", "Nro Pedido", "col-lg-2").OnButtonClick("$('#myModalOrdenCompra').modal('show');").FontButton("glyphicon glyphicon-search").Attributes(new { @placeholder = "Nro Pedido" })
                            @Html.CRM().TextBoxButtonFor(m => m.NumeroCotizacion, "col-lg-4", "Cotización", "col-lg-2").OnButtonClick("$('#myModalCotiza').modal('show');").FontButton("glyphicon glyphicon-search").Attributes(new { @placeholder = "Nro de Cotizacion" })
                        </div>
                        <div class="form-group">
                            @if (ViewBag.IsNew)
                            {
                                @Html.CRM().DropDownList("TipoPrecioId", Model.TipoPrecioId, ViewBag.TipoPrecioList, "col-lg-4", "Tipo Precio", "col-lg-2", new { @onchange = "onChangeImpuesto()" })
                            }
                            else
                            {
                                @Html.CRM().DropDownList("TipoPrecioId", Model.TipoPrecioId, ViewBag.TipoPrecioList, "col-lg-4", "Tipo Precio", "col-lg-2", new { @disabled = "disabled" })
                            }
                            @Html.CRM().DropDownList("MonedaId", Model.MonedaId, @ViewBag.MonedaList, "col-lg-4", "Moneda", "col-lg-2")
                        </div>
                        <div class="form-group">
                            @Html.CRM().DropDownList("ImpuestoId", Model.ImpuestoId, @ViewBag.ImpuestoList, "col-lg-4", "IGV", "col-lg-2", new { @onchange = "onChangeImpuesto(this)" })
                            @Html.CRM().DropDownList("Formato", Model.Formato, @ViewBag.ListFormato, "col-lg-4", "Formato", "col-lg-2")
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.CRM().DropDownList("AlmacenId", Model.AlmacenId, @ViewBag.almacenList, "col-lg-10", "Almacen", "col-lg-2", new { @disabled = "true" })
                        </div>
                        <div class="form-group">
                            @Html.CRM().TextBoxButtonFor(m => m.NumeroRuc, "col-lg-5", "RUC/DNI", "col-lg-2").OnButtonClick("onChangeRucCliente()").FontButton("glyphicon glyphicon-search").Attributes(new { @placeholder = "RUC/DNI" })
                            <div class="col-md-2">
                                <div class="input-group">
                                    <span class="input-group-addon" id="basic-addon" onclick="onClickClienteNuevo(this)"><span class="glyphicon glyphicon-plus"></span></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                @Html.CRM().CheckBoxFor(m => m.Envio, "Enviar", "Enviar Sunat")
                            </div>
                        </div>
                        <div class="form-group">
                            @if (ViewBag.IsNew)
                            {
                                @Html.CRM().Select2List("ClienteId", Model.ClienteId, ViewBag.ListarCliente, "col-lg-10", "Razón Social", "col-lg-2")

                            }
                            else
                            {
                                @Html.CRM().Select2List("ClienteId", Model.ClienteId, ViewBag.ListarCliente, "col-lg-10", "Razón Social", "col-lg-2", new { @disabled = "disabled" })
                            }
                        </div>
                        <div class="form-group">
                            @Html.CRM().DropDownList("DireccionId", Model.DireccionId, ViewBag.ListarDireccion, "col-lg-10", "Dirección", "col-lg-2")
                        </div>
                        <div class="form-group">
                            @Html.CRM().TextAreaFor(m => m.Observacion, "col-md-10", "Observación", "col-lg-2").Attributes(new { @placeholder = "Observaciones" })
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12 col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                @Html.CRM().MenuBar("BienesMenuBar", "onClickBienesMenuBar", new ItemMenuBar[]{
                                new ItemMenuBar(MenuBarButtonType.New,!ViewBag.IsNew),
                                new ItemMenuBar(MenuBarButtonType.Edit,true),
                                new ItemMenuBar(MenuBarButtonType.Save,true),
                                new ItemMenuBar(MenuBarButtonType.Cancel,true)
                            }, MenuBarType.Small)
            </div>
            <div class="panel-body" id="panel">

                <table id="jqGridDetalle"></table>
                <div id="jqGridPager"></div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12 col-md-12">
        <div class="panel panel-default">
            <div class="panel-body form-horizontal">
                @using (Html.BeginForm("", "", FormMethod.Post, new { @id = "form3" }))
                {
                    <div class="row">
                        <div class="col-lg-7 col-md-7">
                            <fieldset class="scheduler-border">
                                <legend class="scheduler-border">Metodo de Pago</legend>
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class="form-group">
                                            <div class="col-lg-12 text-right">
                                                <button class="btn btn-sm btn-danger" type="button" id="btnAddItem">
                                                    <span class="glyphicon glyphicon-plus"></span>
                                                    Agregar Pago
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-12 form-horizontal" id="divFormaPagoDetalle">
                                        <input type="hidden" name="cuotas" id="cuotas" class="cuotas" value="0" />
                                        @Html.CRM().DropDownList("FormaVentaId", Model.FormaVentaId, @ViewBag.FormaVenta, "col-lg-3", "Cond. de Pago", "col-lg-2", new { })
                                        @Html.CRM().TextBox("Referencia", null, "col-lg-3", "Referencia", "col-lg-1").Attributes(new { @placeholder = "Referencia" })
                                        @Html.CRM().NumericTextBox("ValorTotal", null, "col-lg-2", "ValorTotal", "col-lg-1").TextNumericType(NumericType.Decimal).CantidadEnteros(14).CantidadDecimales(2).Attributes(new { })
                                    </div>
                                </div>
                            </fieldset>
                            <fieldset class="scheduler-border">
                                <legend class="scheduler-border">Guia Remisión</legend>
                                <div class="row">
                                    <div class="col-lg-12 form-horizontal">
                                        <div class="form-group">
                                            @Html.CRM().DropDownList("GuiaRemisionRemiteId", Model.GuiaRemisionId, @ViewBag.ListGuiaRemiten, "col-lg-3", "Guia Remisión", "col-lg-2", new { })
                                            @Html.CRM().TextBox("GuiaRemisionRemite", null, "col-lg-3", "Nro Guia", "col-lg-2").Attributes(new { @placeholder = "Nro Guia remisión" })
                                        </div>
                                        <div class="form-group">
                                            @Html.CRM().DropDownList("GuiaRemisionTransportId", Model.GuiaRemisionTransporteId, @ViewBag.ListGuiaTransporte, "col-lg-3", "Guia Remisión", "col-lg-2", new { })
                                            @Html.CRM().TextBox("GuiaRemisionTranspor", null, "col-lg-3", "Nro Guia", "col-lg-2").Attributes(new { @placeholder = "Nro Guia remisión" })
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                        <div class="col-lg-5 col-md-5">
                            <div class="form-group">
                                @Html.CRM().NumericTextBoxFor(m => m.SubTotal, "col-lg-4", "Gravada", "col-lg-2").TextNumericType(NumericType.Decimal).CantidadEnteros(14).CantidadDecimales(2).Attributes(new { @readonly = "true" })
                                @Html.CRM().NumericTextBoxFor(m => m.Descuento, "col-lg-4", "Descuento", "col-lg-2").TextNumericType(NumericType.Decimal).CantidadEnteros(14).CantidadDecimales(2).Attributes(new { @readonly = "true" })
                            </div>
                            <div class="form-group">
                                @Html.CRM().NumericTextBoxFor(m => m.TotalExonerado, "col-lg-4", "Exonerada", "col-lg-2").TextNumericType(NumericType.Decimal).CantidadEnteros(14).CantidadDecimales(2).Attributes(new { @readonly = "true" })
                                @Html.CRM().NumericTextBoxFor(m => m.TotalImpuesto, "col-lg-4", "I.G.V", "col-lg-2").TextNumericType(NumericType.Decimal).CantidadEnteros(14).CantidadDecimales(2).Attributes(new { @readonly = "true" })
                            </div>
                            <div class="form-group">
                                @Html.CRM().NumericTextBoxFor(m => m.TotalInafecto, "col-lg-4", "Inafecto", "col-lg-2").TextNumericType(NumericType.Decimal).CantidadEnteros(14).CantidadDecimales(2).Attributes(new { @readonly = "true" })
                                @Html.CRM().NumericTextBoxFor(m => m.TotalPedido, "col-lg-4", "Total", "col-lg-2").TextNumericType(NumericType.Decimal).CantidadEnteros(14).CantidadDecimales(2).Attributes(new { @readonly = "true" })
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@using (Html.CRM().Popup("myModalProducto", "Bienes y Servicios", "onClickOkProducto", SizePopup.Large))
{
    <div id="divProductoContent"></div>
}

@using (Html.CRM().Popup("modalFactura", "Factura", "onClickOkFactura", SizePopup.Large))
{
    <div id="divFacturaContent"></div>
}

@using (Html.CRM().Popup("modalDireccion", "Direccion", "onClickOkFactura", SizePopup.Large))
{
    <div id="divDireccionContent"></div>
}

@using (Html.CRM().Popup("myModalCotiza", "Cotización", "onClickOkCotiza", SizePopup.Large))
{
    <div id="divCotizacionContent"></div>
}

@using (Html.CRM().Popup("myModalOrdenCompra", "Orden Compra", "onClickOkOrdenCom", SizePopup.Large))
{
    <div id="divOrdenCompraContent"></div>
}

@using (Html.CRM().Popup("myModalCliente", "Crear Cliente", "onClickCreateCliente", SizePopup.Large))
{
    <div id="modalContentCliente"></div>
}

@using (Html.CRM().Popup("divFormaPago", "Forma de Pago", "onClickOkFormaPago", SizePopup.Large))
{
    <div id="divFormaDePagoContent"></div>
}

<script type="text/javascript">
    var _widthPanel = $("#panel").width();
    var _heightGrid = getHeightForResize(100);
    var unidadList;
    var _impuestoNacional = parseInt($("#MontoImpuesto").val());
    var tipoAfecta = sessionStorage.getItem('tipoAfectaLista');
    var marcaLista = sessionStorage.getItem('marcaLista');

    $.post("@Url.Action("ListUnidadMedida")", function (response) {
        unidadList = addItem(response);
    });
    $(document).ready(function () {
        $("#jqGridDetalle").jqGrid({
            url: '@Url.Action("ListarItem", "NotaVenta", new { area = "op" })',
            postData: {
                ordenId: function () { return $("#OrdenId").val(); }
            },
            mtype: "POST",
            datatype: "json",
            colModel: [
                { label: 'Id', name: 'Id', hidden: true, formatter: 'integer', key: true },
                { label: 'OrdenItemId', name: 'OrdenItemId', hidden: true, formatter: 'integer'  },
                { label: 'OrdenId', name: 'OrdenId', hidden: true, formatter: 'integer' },
                { label: 'BienServicioId', name: 'BienServicioId', hidden: true, formatter: 'integer' },
                { label: 'BienAlmacenId', name: 'BienAlmacenId', hidden: true, formatter: 'integer' },
                { label: 'TipoImpuesto', name: 'TipoImpuesto', hidden: true },
                { label: 'IncluyeImpuesto', name: 'IncluyeImpuesto', hidden: true },
                { label: 'Código', name: 'Codigo', width: 100, sortable: false, frozen: true },
                { label: 'Cód Comercial', name: 'CodigoComercial', width: 100, sortable: false, frozen: true },
                { label: 'Descripción', name: 'Descripcion', width: 390, sortable: false, frozen: true, editable: true },
                {
                    label: 'Afectación', name: 'TipoImpuestoId', width: 150, hidden: true, edittype: 'select', formatter: 'select', sortable: false, editable: true, frozen: true, editoptions: {
                        dataInit: function (elem) {},
                        dataEvents: [
                            {
                                //type: 'change',
                                //fn: function (e) {
                                //    var rowId = $(e.target).attr('rowid');
                                //    var value = parseInt($(e.target).val(), 10);
                                //    var dataAfect = JSON.parse(localStorage.getItem('tipoAfectacion'));
                                //    var findRow = _.find(dataAfect, { 'TipoImpuestoId': value });
                                //    $("#jqGridDetalle").jqGrid("setCell", rowId, "TipoImpuesto", findRow.Codigo);
                                //    var ids = jQuery("#jqGridDetalle").jqGrid('getDataIDs');
                                //    $.each(ids, function (item,value) { });

                                //}
                            }
                        ]
                    }
                },
                {
                    label: 'U.M', name: 'UnidadMedidaId', width: 120, edittype: 'select', formatter: 'select', sortable: false, editable: true, frozen: true, editoptions: {
                        dataInit: function (elem, options) {
                            //$(elem).select2();
                        }
                    }
                },
                { label: 'Marca', name: 'MarcaId', width: 0, edittype: 'select', formatter: 'select', sortable: false, editable: true, frozen: true, hidden: true },
                {
                    label: 'Precio Unitario', name: 'ValorUnitario', width: 120, editable: true, formatter: 'integer', align: 'right', sortable: false,
                    formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 }, editoptions: {
                       // readonly: 'readonly',
                        dataInit: function (elem, options) {
                            $(elem).inputmask('decimal', {
                                placeholder: "0",
                                digits: 2,
                                digitsOptional: false,
                                autoGroup: true,
                                allowPlus: false,
                                allowMinus: false,
                                clearMaskOnLostFocus: false,
                                removeMaskOnSubmit: true
                            });
                            $(elem).blur(function () {

                                debugger;
                                var _flagImpuesto = $("#FlagImpuesto").val();
                                var rowId = $(elem).parent().parent().attr('id');
                                var rowData = jQuery("#jqGridDetalle").getRowData(rowId);

                                var _precioDescuento = 0;
                                var _valorImporte = 0;
                                var _valorImpuestoSunat = parseFloat($("#MontoImpuesto").val());
                                var _cantidad = stringToDecimal($("#" + rowId + "_Cantidad").val());
                                var _valorUnitario = stringToDecimal($("#" + rowId + "_ValorUnitario").val());
                                var _porcentajeDescuento = stringToDecimal($("#" + rowId + "_PorcentajeDescuento").val());

                                 //Descuento porcentaje
                                var _valorDescuento = (_valorUnitario * _porcentajeDescuento) / 100;
                                _precioDescuento = _valorUnitario - _valorDescuento;

                                if (_valorDescuento != 0) {
                                    $("#" + rowId + "_ImporteDescuento").val(_valorDescuento);
                                } else {
                                    $("#" + rowId + "_ImporteDescuento").val(0);
                                }

                                //Importe descuento
                                var _valorUnitario = stringToDecimal($("#" + rowId + "_ValorUnitario").val());
                                var _valorDescuento = stringToDecimal($("#" + rowId + "_ValorDescuento").val());
                                _precioDescuento = (_valorUnitario - _valorDescuento)

                                if (_valorDescuento != 0) {
                                    $("#" + rowId + "_ImporteDescuento").val(_valorDescuento);
                                } else {
                                    $("#" + rowId + "_ImporteDescuento").val(0);
                                }



                                ///Importe total
                                var _valorDescuento = stringToDecimal($("#" + rowId + "_ValorDescuento").val());
                                var _cantidadVal = stringToDecimal($("#" + rowId + "_Cantidad").val());
                                var _valorImpuesto = 0;

                                var _valorImporteTotal = 0;
                                if (_precioDescuento != 0 || _porcentajeDescuento != 0 ) {
                                    if (_flagImpuesto == '@LetraConstante.S') {
                                        _valorImporteTotal = _precioDescuento * _cantidadVal;
                                    } else {
                                        //_valorImpuesto = (_precioDescuento * _valorImpuestoSunat) / 100;
                                        //_valorImporteTotal = (_precioDescuento + _valorImpuesto) * _cantidadVal;
                                        _valorImporteTotal = _precioDescuento * _cantidadVal;
                                    }
                                } else {
                                    if (_flagImpuesto == '@LetraConstante.S') {
                                        _valorImporteTotal = (_valorUnitario - _valorDescuento) * _cantidadVal;
                                    } else {
                                        //_valorImpuesto = (_valorDescuento * _cantidadVal) * _valorImpuestoSunat / 100;
                                       // _valorImporteTotal = (_valorDescuento + _valorImpuesto) * _cantidadVal;
                                        _valorImporteTotal = _valorDescuento * _cantidadVal;
                                    }

                                }

                                $('#jqGridDetalle').jqGrid('setCell', rowId, 'ImporteTotal', _valorImporteTotal);

                                var descuentoPorcentaje = 0;
                                var precioDescuento = 0;
                                var importeTotal = 0;
                                var importeGravada = 0;
                                var importeExonerada = 0;
                                var importeInafecta = 0;
                                var valorImpuesto = 0;
                                var cantidad = 0;
                                var valorUnitario = 0;
                                var importeDescuento = 0;
                                var importeFooter = 0;
                                var ids = jQuery("#jqGridDetalle").jqGrid('getDataIDs');
                                $.each(ids, function (item, value) {

                                    debugger;
                                    cantidad = stringToDecimal($("#" + value + "_Cantidad").val());
                                    valorUnitario = stringToDecimal($("#" + value + "_ValorUnitario").val());
                                    precioDescuento = stringToDecimal($("#" + value + "_ValorDescuento").val());

                                    var rowData = jQuery('#jqGridDetalle').jqGrid('getRowData', value);
                                    switch (rowData.TipoImpuesto) {
                                        case "@TipoAfectacion.GRAVADO_OPERACION_ONEROSA":
                                                descuentoPorcentaje += stringToDecimal($("#" + value + "_PorcentajeDescuento").val());
                                                importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());

                                                if (_flagImpuesto == '@LetraConstante.S') {
                                                    if (precioDescuento != 0) {
                                                        importeGravada += ((valorUnitario - precioDescuento) * cantidad) / 1.18;
                                                        importeFooter += ((valorUnitario - precioDescuento) * cantidad);
                                                    } else {
                                                        importeGravada += (cantidad * valorUnitario) / 1.18;
                                                        importeFooter += (cantidad * valorUnitario);
                                                    }
                                                } else {
                                                    if (precioDescuento != 0) {
                                                        importeGravada += ((valorUnitario - precioDescuento) * cantidad);
                                                        importeFooter += ((valorUnitario - precioDescuento) * cantidad);
                                                    } else {
                                                        importeGravada += (cantidad * valorUnitario);
                                                        importeFooter += (cantidad * valorUnitario);
                                                    }

                                                }
                                                valorImpuesto = (importeGravada * _impuestoNacional) / 100;
                                                importeTotal = importeGravada + valorImpuesto;
                                                break;
                                        case "@TipoAfectacion.EXONERADO_OPERACION_ONEROSA":
                                          case "@TipoAfectacion.EXONERADO_TRANFERENCIA_GRATUITA":
                                            importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());

                                                descuentoPorcentaje += 0;
                                                precioDescuento += 0;
                                                importeGravada += 0;
                                                importeExonerada += (cantidad * valorUnitario);
                                                valorImpuesto += 0;
                                                importeTotal += importeExonerada;
                                                break;
                                           case "@TipoAfectacion.INAFECTO_OPERACION_ONEROSA":
                                        case "@TipoAfectacion.INAFECTO_TRANSFERENCIA_GRATUITO":
                                                importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                descuentoPorcentaje += 0;
                                                precioDescuento += 0;
                                                importeExonerada = 0;
                                                importeInafecta += (cantidad * valorUnitario);
                                                importeGravada += 0;
                                                valorImpuesto += 0;
                                                importeTotal += importeInafecta;
                                                break;
                                            case "@TipoAfectacion.GRAVADO_RETIRO_POR_PREMIO":
                                            case "@TipoAfectacion.GRAVADO_RETIRO_POR_DONACION":
                                            case "@TipoAfectacion.GRAVADO_RETIRO":
                                            case "@TipoAfectacion.GRAVADO_POR_RETIRO_PUBLICIDAD":
                                            case "@TipoAfectacion.GRAVADO_BONIFICACION":
                                            case "@TipoAfectacion.GRAVADO_ENTREGA_TRABAJADORES":
                                                 importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());

                                                break;
                                            case "@TipoAfectacion.INAFECTO_RETIRO_BONIFICACION":
                                            case "@TipoAfectacion.INAFECTO_RETIRO":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_MUESTRA_MEDICA":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_CONVENIO_COLECTIVO":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_POR_PREMIO":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_POR_PUBLICIDAD":
                                               importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                break;
                                             case "@TipoAfectacion.EXPORTACION_BIENES_SERVICIO":
                                                 importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                break;
                                        }
                                });

                                $("#jqGridDetalle").jqGrid('footerData', 'set', {
                                      ValorUnitario: valorUnitario,
                                      Cantidad : cantidad,
                                      ImporteTotal: importeFooter
                                });

                                $("#DescuentoItem").val(importeDescuento);
                                $("#Descuento").val(importeDescuento);
                                $("#TotalExonerado").val(importeExonerada);
                                $("#TotalInafecto").val(importeInafecta);
                                $("#SubTotal").val(importeGravada);
                                $("#TotalImpuesto").val(valorImpuesto);
                                $("#TotalPedido").val(importeTotal);
                                $("#ValorTotal").val(importeTotal);
                            });
                        }
                    }
                },
                {
                    label: 'Descuento (%)', name: 'PorcentajeDescuento', width: 100, editable: true, sortable: false, formatter: 'integer', align: 'right', sortable: false,
                    formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 }, editoptions: {
                        dataInit: function (elem, options) {
                            $(elem).inputmask('decimal', {
                                placeholder: "0",
                                digits: 2,
                                digitsOptional: false,
                                autoGroup: true,
                                allowPlus: false,
                                allowMinus: false,
                                clearMaskOnLostFocus: false,
                                removeMaskOnSubmit: true
                            });
                            $(elem).blur(function () {
                                var rowId = $(elem).parent().parent().attr('id');
                                var rowData = jQuery("#jqGridDetalle").getRowData(rowId);
                                var _flagImpuesto = $("#FlagImpuesto").val();
                                var _valorImpuestoSunat = parseFloat($("#MontoImpuesto").val());
                                var _valorUnitario = stringToDecimal($("#" + rowId + "_ValorUnitario").val());
                                var _porcentajeDescuento = stringToDecimal($("#" + rowId + "_PorcentajeDescuento").val());
                                var _valorDescuento = stringToDecimal($("#" + rowId + "_ValorDescuento").val());
                                var _cantidad = stringToDecimal($("#" + rowId + "_Cantidad").val());
                                var _valorUnitDescuento = 0;
                                var _valorImpuesto = 0;

                                 //Descuento porcentaje
                                var _importeDescuento = (_valorUnitario * _porcentajeDescuento) / 100;
                                if (_porcentajeDescuento != 0) {
                                    _valorUnitDescuento = _valorUnitario - _importeDescuento;
                                    $("#" + rowId + "_ValorDescuento").val(_importeDescuento);
                                    $("#" + rowId + "_ValorDescuento").prop('disabled', true);
                                } else {

                                    $("#" + rowId + "_ValorDescuento").val(0);
                                    $("#" + rowId + "_ValorDescuento").prop('disabled', false);
                                }

                                var _valorUnitario = stringToDecimal($("#" + rowId + "_ValorUnitario").val());
                                var _valorDescuento = stringToDecimal($("#" + rowId + "_ValorDescuento").val());

                                if (_valorDescuento != 0) {
                                    _valorUnitDescuento = (_valorUnitario - _valorDescuento)
                                    $("#" + rowId + "_ImporteDescuento").val(_valorDescuento);
                                }

                                var _valorImporte = 0;
                                if (_valorDescuento != 0 || _porcentajeDescuento != 0) {
                                    if (_flagImpuesto == '@LetraConstante.S') {
                                        _valorImporte = (_valorUnitDescuento * _cantidad)
                                    } else {
                                        //_valorImpuesto = (_valorUnitDescuento * _valorImpuestoSunat) / 100;
                                        //_valorImporte = (_valorUnitDescuento + _valorImpuesto) * _cantidad;
                                        _valorImporte = _valorUnitDescuento * _cantidad;
                                    }
                                } else {
                                    if (_flagImpuesto == '@LetraConstante.S') {
                                        _valorImporte = (_valorUnitario * _cantidad)
                                    } else {
                                        //_valorImpuesto = (_valorUnitario * _valorImpuestoSunat) / 100;
                                        //_valorImporte = (_valorUnitario + _valorImpuesto) * _cantidad;
                                        _valorImporte = _valorUnitario * _cantidad;
                                    }
                                }

                                $('#jqGridDetalle').jqGrid('setCell', rowId, 'ImporteTotal', _valorImporte);

                                var descuentoPorcentaje = 0;
                                var precioDescuento = 0;
                                var importeTotal = 0;
                                var importeGravada = 0;
                                var importeExonerada = 0;
                                var importeInafecta = 0;
                                var valorImpuesto = 0;
                                var cantidad = 0;
                                var valorUnitario = 0;
                                var importeDescuento = 0;
                                var importeFooter = 0;
                                var ids = jQuery("#jqGridDetalle").jqGrid('getDataIDs');
                                $.each(ids, function (item, value) {

                                    cantidad = stringToDecimal($("#" + value + "_Cantidad").val());
                                    valorUnitario = stringToDecimal($("#" + value + "_ValorUnitario").val());
                                    precioDescuento = stringToDecimal($("#" + value + "_ValorDescuento").val());

                                    var rowData = jQuery('#jqGridDetalle').jqGrid('getRowData', value);
                                    switch (rowData.TipoImpuesto) {
                                        case "@TipoAfectacion.GRAVADO_OPERACION_ONEROSA":
                                                descuentoPorcentaje += stringToDecimal($("#" + value + "_PorcentajeDescuento").val());
                                                importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                if (_flagImpuesto == '@LetraConstante.S') {
                                                    if (precioDescuento != 0) {
                                                        importeGravada += ((valorUnitario - precioDescuento) * cantidad) / 1.18;
                                                        importeFooter += ((valorUnitario - precioDescuento) * cantidad);
                                                    } else {
                                                        importeGravada += (cantidad * valorUnitario) / 1.18;
                                                        importeFooter += (cantidad * valorUnitario);
                                                    }
                                                } else {
                                                    if (precioDescuento != 0) {
                                                        importeGravada += ((valorUnitario - precioDescuento) * cantidad);
                                                        importeFooter += ((valorUnitario - precioDescuento) * cantidad);
                                                    } else {
                                                        importeGravada += (valorUnitario * cantidad);
                                                        importeFooter += (valorUnitario * cantidad);
                                                    }
                                                }

                                                valorImpuesto = (importeGravada * _impuestoNacional) / 100;
                                                importeTotal = importeGravada + valorImpuesto;
                                                break;
                                        case "@TipoAfectacion.EXONERADO_OPERACION_ONEROSA":
                                          case "@TipoAfectacion.EXONERADO_TRANFERENCIA_GRATUITA":
                                            importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());

                                                descuentoPorcentaje += 0;
                                                precioDescuento += 0;
                                                importeGravada += 0;
                                                importeExonerada += (cantidad * valorUnitario);
                                                valorImpuesto += 0;
                                                importeTotal += importeExonerada;
                                                break;
                                           case "@TipoAfectacion.INAFECTO_OPERACION_ONEROSA":
                                        case "@TipoAfectacion.INAFECTO_TRANSFERENCIA_GRATUITO":
                                                importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                descuentoPorcentaje += 0;
                                                precioDescuento += 0;
                                                importeExonerada = 0;
                                                importeInafecta += (cantidad * valorUnitario);
                                                importeGravada += 0;
                                                valorImpuesto += 0;
                                                importeTotal += importeInafecta;
                                                break;
                                            case "@TipoAfectacion.GRAVADO_RETIRO_POR_PREMIO":
                                            case "@TipoAfectacion.GRAVADO_RETIRO_POR_DONACION":
                                            case "@TipoAfectacion.GRAVADO_RETIRO":
                                            case "@TipoAfectacion.GRAVADO_POR_RETIRO_PUBLICIDAD":
                                            case "@TipoAfectacion.GRAVADO_BONIFICACION":
                                            case "@TipoAfectacion.GRAVADO_ENTREGA_TRABAJADORES":
                                                 importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());

                                                break;
                                            case "@TipoAfectacion.INAFECTO_RETIRO_BONIFICACION":
                                            case "@TipoAfectacion.INAFECTO_RETIRO":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_MUESTRA_MEDICA":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_CONVENIO_COLECTIVO":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_POR_PREMIO":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_POR_PUBLICIDAD":
                                               importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                break;
                                             case "@TipoAfectacion.EXPORTACION_BIENES_SERVICIO":
                                                 importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                break;
                                        }
                                });

                                $("#jqGridDetalle").jqGrid('footerData', 'set', {
                                      ValorUnitario: valorUnitario,
                                      Cantidad : cantidad,
                                      ImporteTotal: importeFooter
                                });

                                $("#DescuentoItem").val(importeDescuento);
                                $("#Descuento").val(importeDescuento);
                                $("#TotalExonerado").val(importeExonerada);
                                $("#TotalInafecto").val(importeInafecta);
                                $("#SubTotal").val(importeGravada);
                                $("#TotalImpuesto").val(valorImpuesto);
                                $("#TotalPedido").val(importeTotal);
                                $("#ValorTotal").val(importeTotal);
                            });
                        }
                    }
                },
                {
                    label: 'Precio Dscto', name: 'ValorDescuento', width: 100, editable: true, sortable: false, formatter: 'integer', align: 'right', sortable: false,
                    formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 }, editoptions: {
                       // diabled: 'true',
                        dataInit: function (elem, options) {
                            $(elem).inputmask('decimal', {
                                placeholder: "0",
                                digits: 2,
                                digitsOptional: false,
                                autoGroup: true,
                                allowPlus: false,
                                allowMinus: false,
                                clearMaskOnLostFocus: false,
                                removeMaskOnSubmit: true
                            });
                            $(elem).blur(function () {

                                debugger;
                                var _flagImpuesto = $("#FlagImpuesto").val();
                                var rowId = $(elem).parent().parent().attr('id');
                                var rowData = jQuery("#jqGridDetalle").getRowData(rowId);
                                var _valorImpuestoSunat = parseFloat($("#MontoImpuesto").val());
                                var _valorUnitario = stringToDecimal($("#" + rowId + "_ValorUnitario").val());
                                var _valorDescuento = stringToDecimal($("#" + rowId + "_ValorDescuento").val());
                                var _porcentajeDescuento = stringToDecimal($("#" + rowId + "_PorcentajeDescuento").val());
                                var _cantidad = stringToDecimal($("#" + rowId + "_Cantidad").val());
                                var _valorImpuesto = 0;
                                var _importeTotal = 0;
                                var _valorUnitDescuento = _valorUnitario - _valorDescuento;

                                if (_valorDescuento != 0 && _porcentajeDescuento == 0) {
                                    if (_flagImpuesto == '@LetraConstante.S') {
                                        _importeTotal = (_valorUnitDescuento * _cantidad);
                                    } else {
                                       // _valorImpuesto = (_valorUnitDescuento * _valorImpuestoSunat) / 100;
                                       // _importeTotal = (_valorUnitDescuento + _valorImpuesto) * _cantidad;
                                        _importeTotal = _valorUnitDescuento * _cantidad;
                                    }

                                    $("#" + rowId + "_ImporteDescuento").val(_valorDescuento);
                                    $("#" + rowId + "_PorcentajeDescuento").prop('disabled', true);
                                } else {
                                    if (_flagImpuesto == '@LetraConstante.S') {
                                        _importeTotal = _valorUnitario * _cantidad;
                                    } else {
                                        //_valorImpuesto = (_valorUnitario  * _valorImpuestoSunat) / 100;
                                       // _importeTotal = (_valorUnitario + _valorImpuesto) * _cantidad;
                                        _importeTotal = _valorUnitario * _cantidad;
                                    }
                                    $("#" + rowId + "_PorcentajeDescuento").prop('disabled', false);
                                }

                                if (_valorDescuento == 0 && _porcentajeDescuento == 0) {
                                    $("#" + rowId + "_ImporteDescuento").val(0);
                                }

                                $('#jqGridDetalle').jqGrid('setCell', rowId, 'ImporteTotal', _importeTotal);

                                 var descuentoPorcentaje = 0;
                                var precioDescuento = 0;
                                var importeTotal = 0;
                                var importeGravada = 0;
                                var importeExonerada = 0;
                                var importeInafecta = 0;
                                var valorImpuesto = 0;
                                var cantidad = 0;
                                var valorUnitario = 0;
                                var importeDescuento = 0;
                                var importeFooter = 0;
                                var ids = jQuery("#jqGridDetalle").jqGrid('getDataIDs');
                                $.each(ids, function (item, value) {

                                    debugger;
                                    cantidad = stringToDecimal($("#" + value + "_Cantidad").val());
                                    valorUnitario = stringToDecimal($("#" + value + "_ValorUnitario").val());
                                    precioDescuento = stringToDecimal($("#" + value + "_ValorDescuento").val());

                                    var rowData = jQuery('#jqGridDetalle').jqGrid('getRowData', value);
                                    switch (rowData.TipoImpuesto) {
                                        case "@TipoAfectacion.GRAVADO_OPERACION_ONEROSA":
                                                descuentoPorcentaje += stringToDecimal($("#" + value + "_PorcentajeDescuento").val());
                                                importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                if (_flagImpuesto == '@LetraConstante.S') {
                                                    if (precioDescuento != 0) {
                                                        importeGravada += (cantidad * (valorUnitario - precioDescuento)) / 1.18;
                                                        importeFooter += (cantidad * (valorUnitario - precioDescuento));
                                                    } else {
                                                        importeGravada += (cantidad * valorUnitario) / 1.18;
                                                        importeFooter += (cantidad * valorUnitario);
                                                    }
                                                } else {
                                                    if (precioDescuento != 0) {
                                                        importeGravada += (cantidad * (valorUnitario - precioDescuento));
                                                        importeFooter += (cantidad * (valorUnitario - precioDescuento));
                                                    } else {
                                                        importeGravada += (cantidad * valorUnitario);
                                                        importeFooter += (cantidad * valorUnitario);
                                                    }
                                                }
                                                valorImpuesto = (importeGravada * _impuestoNacional) / 100;
                                                importeTotal = importeGravada + valorImpuesto;
                                                break;
                                        case "@TipoAfectacion.EXONERADO_OPERACION_ONEROSA":
                                          case "@TipoAfectacion.EXONERADO_TRANFERENCIA_GRATUITA":
                                            importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());

                                                descuentoPorcentaje += 0;
                                                precioDescuento += 0;
                                                importeGravada += 0;
                                                importeExonerada += (cantidad * valorUnitario);
                                                valorImpuesto += 0;
                                                importeTotal += importeExonerada;
                                                break;
                                           case "@TipoAfectacion.INAFECTO_OPERACION_ONEROSA":
                                        case "@TipoAfectacion.INAFECTO_TRANSFERENCIA_GRATUITO":
                                                importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                descuentoPorcentaje += 0;
                                                precioDescuento += 0;
                                                importeExonerada = 0;
                                                importeInafecta += (cantidad * valorUnitario);
                                                importeGravada += 0;
                                                valorImpuesto += 0;
                                                importeTotal += importeInafecta;
                                                break;
                                            case "@TipoAfectacion.GRAVADO_RETIRO_POR_PREMIO":
                                            case "@TipoAfectacion.GRAVADO_RETIRO_POR_DONACION":
                                            case "@TipoAfectacion.GRAVADO_RETIRO":
                                            case "@TipoAfectacion.GRAVADO_POR_RETIRO_PUBLICIDAD":
                                            case "@TipoAfectacion.GRAVADO_BONIFICACION":
                                            case "@TipoAfectacion.GRAVADO_ENTREGA_TRABAJADORES":
                                                 importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());

                                                break;
                                            case "@TipoAfectacion.INAFECTO_RETIRO_BONIFICACION":
                                            case "@TipoAfectacion.INAFECTO_RETIRO":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_MUESTRA_MEDICA":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_CONVENIO_COLECTIVO":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_POR_PREMIO":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_POR_PUBLICIDAD":
                                               importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                break;
                                             case "@TipoAfectacion.EXPORTACION_BIENES_SERVICIO":
                                                 importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                break;
                                        }
                                });

                                $("#jqGridDetalle").jqGrid('footerData', 'set', {
                                      ValorUnitario: valorUnitario,
                                      Cantidad : cantidad,
                                      ImporteTotal: importeFooter
                                });

                                $("#DescuentoItem").val(importeDescuento);
                                $("#Descuento").val(importeDescuento);
                                $("#TotalExonerado").val(importeExonerada);
                                $("#TotalInafecto").val(importeInafecta);
                                $("#SubTotal").val(importeGravada);
                                $("#TotalImpuesto").val(valorImpuesto);
                                $("#TotalPedido").val(importeTotal);
                                $("#ValorTotal").val(importeTotal);
                            });
                        }
                    }
                },
                {
                     label: 'Cantidad', name: 'Cantidad', width: 100, editable: true, formatter: 'integer', align: 'right', sortable: false, formatoptions: {
                         decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2
                     }, editoptions: {
                         dataInit: function (elem, options) {
                             $(elem).inputmask('decimal', {
                                 placeholder: "0",
                                 digits: 2,
                                 digitsOptional: false,
                                 autoGroup: true,
                                 allowPlus: false,
                                 allowMinus: false,
                                 clearMaskOnLostFocus: false,
                                 removeMaskOnSubmit: true
                             });
                             $(elem).blur(function () {

                                 debugger;
                                 var _flagImpuesto = $("#FlagImpuesto").val();
                                 var rowId = parseFloat($(elem).parent().parent().attr('id'));
                                 var rowData = jQuery("#jqGridDetalle").getRowData(rowId);
                                 var _valorUnitario = stringToDecimal($("#" + rowId + "_ValorUnitario").val());
                                 var _porcentajeDescuento = stringToDecimal($("#" + rowId + "_PorcentajeDescuento").val());
                                 var _cantidad = stringToDecimal($("#" + rowId + "_Cantidad").val());
                                 var _impuestoNacional = parseFloat($("#MontoImpuesto").val());
                                 var _valorUnitDescuento = 0;

                                 //Descuento porcentaje
                                 var _importeDescuento = (_valorUnitario * _porcentajeDescuento) / 100
                                 _valorUnitDescuento = _valorUnitario - _importeDescuento;

                                 if (_importeDescuento != 0) {
                                     $("#" + rowId + "_ImporteDescuento").val(_importeDescuento);
                                 }

                                 //Importe descuento
                                 var _valorUnitario = stringToDecimal($("#" + rowId + "_ValorUnitario").val());
                                 var _valorDescuento = stringToDecimal($("#" + rowId + "_ValorDescuento").val());
                                 _valorUnitDescuento = (_valorUnitario - _valorDescuento)

                                 if (_valorDescuento!= 0) {
                                     $("#" + rowId + "_ImporteDescuento").val(_valorDescuento);
                                 }


                                 //Importe Total
                                 var _valorDescuento = stringToDecimal($("#" + rowId + "_ValorDescuento").val());
                                 var _importeCantidad = stringToDecimal($("#" + rowId + "_Cantidad").val());

                                 var _importeTotal = 0;
                                 var _impuestoRows = 0;
                                 if (_valorDescuento != 0 || _porcentajeDescuento != 0) {
                                     if (_flagImpuesto == '@LetraConstante.S') {
                                         _importeTotal = _importeCantidad * _valorUnitDescuento;
                                     } else {
                                        // _impuestoRows = (_valorUnitDescuento * _impuestoNacional) / 100;
                                       //  _importeTotal = (_valorUnitDescuento + _impuestoRows) * _importeCantidad;
                                          _importeTotal = _valorUnitDescuento * _importeCantidad;
                                     }

                                 } else {
                                     if (_flagImpuesto == '@LetraConstante.S') {
                                         _importeTotal = _valorUnitario * _importeCantidad;
                                     } else {
                                        // _impuestoRows = (_valorUnitario * _impuestoNacional) / 100;
                                       //  _importeTotal = (_valorUnitario + _impuestoRows)  * _importeCantidad;
                                        _importeTotal = _valorUnitario  * _importeCantidad;
                                     }

                                 }

                                $('#jqGridDetalle').jqGrid('setCell', rowId, 'ImporteTotal', _importeTotal);

                                var descuentoPorcentaje = 0;
                                var precioDescuento = 0;
                                var importeTotal = 0;
                                var importeGravada = 0;
                                var importeExonerada = 0;
                                var importeInafecta = 0;
                                var valorImpuesto = 0;
                                var cantidad = 0;
                                var valorUnitario = 0;
                                var importeDescuento = 0;
                                var importeFooter = 0;
                                var ids = jQuery("#jqGridDetalle").jqGrid('getDataIDs');
                                $.each(ids, function (item, value) {

                                    cantidad = stringToDecimal($("#" + value + "_Cantidad").val());
                                    valorUnitario = stringToDecimal($("#" + value + "_ValorUnitario").val());
                                    precioDescuento = stringToDecimal($("#" + value + "_ValorDescuento").val());

                                    var rowData = jQuery('#jqGridDetalle').jqGrid('getRowData', value);
                                    switch (rowData.TipoImpuesto) {
                                        case "@TipoAfectacion.GRAVADO_OPERACION_ONEROSA":
                                                descuentoPorcentaje += stringToDecimal($("#" + value + "_PorcentajeDescuento").val());
                                                importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                if (_flagImpuesto == '@LetraConstante.S') {
                                                    if (precioDescuento != 0) {
                                                        importeGravada += (cantidad * (valorUnitario - precioDescuento)) / 1.18;
                                                        importeFooter += (cantidad * (valorUnitario - precioDescuento));
                                                    } else {
                                                        importeGravada += (cantidad * valorUnitario) / 1.18;
                                                        importeFooter += (cantidad * valorUnitario);
                                                    }
                                                } else {
                                                    if (precioDescuento != 0) {
                                                        //importeGravada += (cantidad * (valorUnitario - precioDescuento));
                                                        importeGravada += (cantidad * (valorUnitario - precioDescuento));
                                                        importeFooter += (cantidad * (valorUnitario - precioDescuento));
                                                    } else {
                                                        importeGravada += (cantidad * valorUnitario);
                                                        importeFooter += (cantidad * valorUnitario);
                                                    }
                                                }
                                                valorImpuesto = (importeGravada * _impuestoNacional) / 100;
                                                importeTotal = importeGravada + valorImpuesto;
                                                break;
                                        case "@TipoAfectacion.EXONERADO_OPERACION_ONEROSA":
                                          case "@TipoAfectacion.EXONERADO_TRANFERENCIA_GRATUITA":
                                            importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());

                                                descuentoPorcentaje += 0;
                                                precioDescuento += 0;
                                                importeGravada += 0;
                                                importeExonerada += (cantidad * valorUnitario);
                                                valorImpuesto += 0;
                                                importeTotal += importeExonerada;
                                                break;
                                           case "@TipoAfectacion.INAFECTO_OPERACION_ONEROSA":
                                        case "@TipoAfectacion.INAFECTO_TRANSFERENCIA_GRATUITO":
                                                importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                descuentoPorcentaje += 0;
                                                precioDescuento += 0;
                                                importeExonerada = 0;
                                                importeInafecta += (cantidad * valorUnitario);
                                                importeGravada += 0;
                                                valorImpuesto += 0;
                                                importeTotal += importeInafecta;
                                                break;
                                            case "@TipoAfectacion.GRAVADO_RETIRO_POR_PREMIO":
                                            case "@TipoAfectacion.GRAVADO_RETIRO_POR_DONACION":
                                            case "@TipoAfectacion.GRAVADO_RETIRO":
                                            case "@TipoAfectacion.GRAVADO_POR_RETIRO_PUBLICIDAD":
                                            case "@TipoAfectacion.GRAVADO_BONIFICACION":
                                            case "@TipoAfectacion.GRAVADO_ENTREGA_TRABAJADORES":
                                                 importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());

                                                break;
                                            case "@TipoAfectacion.INAFECTO_RETIRO_BONIFICACION":
                                            case "@TipoAfectacion.INAFECTO_RETIRO":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_MUESTRA_MEDICA":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_CONVENIO_COLECTIVO":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_POR_PREMIO":
                                            case "@TipoAfectacion.INAFECTO_RETIRO_POR_PUBLICIDAD":
                                               importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                break;
                                             case "@TipoAfectacion.EXPORTACION_BIENES_SERVICIO":
                                                 importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                                                break;
                                        }
                                });

                                $("#jqGridDetalle").jqGrid('footerData', 'set', {
                                      ValorUnitario: valorUnitario,
                                      Cantidad : cantidad,
                                      ImporteTotal: importeFooter
                                });

                                $("#DescuentoItem").val(importeDescuento);
                                $("#Descuento").val(importeDescuento);
                                $("#TotalExonerado").val(importeExonerada);
                                $("#TotalInafecto").val(importeInafecta);
                                $("#SubTotal").val(importeGravada);
                                $("#TotalImpuesto").val(valorImpuesto);
                                $("#TotalPedido").val(importeTotal);
                                $("#ValorTotal").val(importeTotal);
                             });
                         }
                     }
                 },
                {
                    label: 'Descuento', name: 'ImporteDescuento', width: 100, editable: true, sortable: false, formatter: 'integer', align: 'right', sortable: false,
                    formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 }, editoptions: {
                        readonly: 'readonly',
                        dataInit: function (elem, options) {
                            $(elem).inputmask('decimal', {
                                placeholder: "0",
                                digits: 2,
                                digitsOptional: false,
                                autoGroup: true,
                                allowPlus: false,
                                allowMinus: false,
                                clearMaskOnLostFocus: false,
                                removeMaskOnSubmit: true
                            });
                        }
                    }
                },
                {
                    label: 'Importe', name: 'ImporteTotal', width: 100, editable: false, formatter: 'integer', align: 'right', sortable: false,
                    formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 }, editoptions: {
                        readonly: 'readonly',
                        dataInit: function (elem, options) {
                            $(elem).inputmask('decimal', { digits: 2 });
                        }
                    }
                },
                {
                      label: "Eliminar",
                      name: "actions",
                      width: 80,
                      sortable: false,
                      align: 'center',
                      formatter: function (cellvalue, options, rowObject) {
                            var _stadoSunat = $("#EstadoLetra").val();
                          var _control = "";
                          if (_stadoSunat != '@EstadoLetraSunat.ACEPTADO') {
                              _control = "<a href='#' id='" + options.rowId + "' rel='" + rowObject.OrdenItemId + "' onClick='fnDeleteRow(this)' ><span class='glyphicon glyphicon-trash'></span></a>";
                          } else {
                              _control = "<a href='#' id='" + options.rowId + "'><span class='glyphicon glyphicon-trash'></span></a>";
                          }
                          return _control;
                      }

                  }

            ],
            viewrecords: false,
            page: 1,
            //scroll: 1,
            emptyrecords: '',
            footerrow: true,
            rownumbers: true,
            //shrinkToFit: true,
            //autowidth: true,
            beforeProcessing: function (data) {
                $(this).setColProp('UnidadMedidaId', { editoptions: { value: unidadList } });
                $(this).setColProp('MarcaId', { editoptions: { value: marcaLista } });
                $(this).setColProp('TipoImpuestoId', { editoptions: { value: tipoAfecta } });

            },
            loadComplete: function () {
                var grid = $(this);
                var _cantidad = grid.jqGrid('getCol', 'Cantidad', false, 'sum');
                var _pocenajeDescuento = grid.jqGrid('getCol', 'PorcentajeDescuento', false, 'sum');
                var _valorDescuento = grid.jqGrid('getCol', 'ValorDescuento', false, 'sum');
                var _importeDescuento = grid.jqGrid('getCol', 'ImporteDescuento', false, 'sum');
                var _valorUnitario = grid.jqGrid('getCol', 'ValorUnitario', false, 'sum');
                var _importeTotal = grid.jqGrid('getCol', 'ImporteTotal', false, 'sum');
                grid.jqGrid('footerData', 'set', {
                    Producto: 'Sub Total',
                    Cantidad: _cantidad,
                    ValorUnitario: _valorUnitario,
                    PorcentajeDescuento: _pocenajeDescuento,
                    ValorDescuento: _valorDescuento,
                    ImporteDescuento: _importeDescuento,
                    ImporteTotal: _importeTotal
                });
            },
            gridComplete: function () {
                var row = getGridSelectedRow('jqGridDetalle');
                var dataIDs = $("#jqGridDetalle").jqGrid('getDataIDs');
                $.each(dataIDs, function (item, value) {
                    $("#jqGridDetalle").jqGrid('editRow', value, true);
                });
            },
            pager: "#jqGridPager",
            height: (_heightGrid - 95),
            width: (_widthPanel - 15)
           });


        $("#divFormaPago").on('show.bs.modal', function () {
            $(this).find('input:text').val('');
            controllerGetAction('@Url.Action("FormaPagoEdit", "FacturaVenta")', null, 'divFormaDePagoContent', false, false, function () {});
        });

        $("#myModalProducto").on('show.bs.modal', function () {
            $(this).find('input:text').val('');
            var _productoBusqueda = $("#Descripcion").val();
            controllerGetAction('@Url.Action("ProductoEdit", "FacturaVenta")', null, 'divProductoContent', false, false, function () {
                jQuery("#descripcionProd").val(_productoBusqueda);
                jQuery("#buttonBuscar").click();
            });
        });
        $('#myModalProducto').on('hidden.bs.modal', function (e) {
            $('#divProductoContent').empty();
        });

        $("#modalDireccion").on('show.bs.modal', function () {
            $(this).find('input:text').val('');
            var postData = {
                clientId : 0
            };
            controllerGetAction('@Url.Action("DireccionEdit", "FacturaVenta")', postData, 'divDireccionContent', false, false, null);
        });
        $('#modalDireccion').on('hidden.bs.modal', function (e) {
            $('#divDireccionContent').empty();
        });

        $("#myModalCotiza").on('show.bs.modal', function () {
            $(this).find('input:text').val('');
            var postData = {
                clientId: 0
            };
            controllerGetAction('@Url.Action("CotizacionEdit", "FacturaVenta")', postData, 'divCotizacionContent', false, false, null);
        });
        $('#myModalCotiza').on('hidden.bs.modal', function (e) {
            $('#divCotizacionContent').empty();
        });

        $("#myModalOrdenCompra").on('show.bs.modal', function () {
            $(this).find('input:text').val('');
            var postData = {};
            controllerGetAction('@Url.Action("OrdenCompraEdit", "FacturaVenta")', postData, 'divOrdenCompraContent', false, false, null);
        });
        $('#myModalOrdenCompra').on('hidden.bs.modal', function (e) {
            $('#divOrdenCompraContent').empty();
        });

         $("#myModalCliente").on('show.bs.modal', function () {
            $(this).find('input:text').val('');
            controllerGetAction('@Url.Action("ClienteEdit", "Cliente",new {area="am" })', null, 'modalContentCliente', false, false, null);
        });

        $('#myModalCliente').on('hidden.bs.modal', function (e) {
            $('#modalContentCliente').empty();
        });

        $("#ClienteId").select2({
            ajax: {
                url: '@Url.Action("GetCliente")',
                dataType: 'json',
                delay: 250,
                type: 'POST',
                data: function (params) {
                    return {
                        query: params.term // search ter
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: $.map(data.data, function (item) {
                            return {
                                text: item.RazonSocial,
                                id: item.ClienteId
                            };
                        })
                    };
                },
                cache: true
            },
            placeholder: 'Busqueda de cliente razon social o RUC',
            allowClear: true,
            escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
            minimumInputLength: 1,
            language: {
                inputTooShort: function () {
                    return "Busqueda de cliente razon social o RUC.";
                }
            }
        });

        $('#ClienteId').on('select2:select', function (e) {
            var data = e.params.data;

            $.post('@Url.Action("BuscarPorId", "NotaVenta")', { id: data.id }, function (response) {
                if (response.success) {
                    $("#NumeroRuc").val(response.data.NumeroDocumento);
                    $("#RazonSocial").val(response.data.RazonSocial);
                    $('#DireccionId').find('option').remove().end();
                    $("#DireccionId").addItems(response.data.List);
                    $("#DireccionId").prop("disabled", false);
                    $("#DireccionId").prop("selectedIndex", 1);
                } else {
                    MsgAlert(3, response.message);
                }
            });
        });

        if (document.getElementById("EditAction").value=="2") {
            controllerPostJsonToHtml("@Url.Action("FormaCancelacion", "FacturaVenta")", {
                ordenId: document.getElementById('OrdenId').value
            }, 'divFormaPagoDetalle', true, true, null);
         }

    });


 function fnDeleteRow(control) {
        if (control.rel != "undefined") {
            var jsonData = {
                id: control.rel
            };
            var _succces = false;
            controllerPostJsonSync('@Url.Action("DeleteItem")', jsonData, false, false, function (response) {
                if (response.success) {
                    MsgAlert(1, response.message);
                    _succces = true;
                } else {
                    MsgAlert(3, response.message);
                }
            });
            if (!_succces) {
                return;
            }
        }

        $("#jqGridDetalle").jqGrid('delRowData', control.id);
         var descuentoPorcentaje = 0;
         var precioDescuento = 0;
         var importeTotal = 0;
         var importeGravada = 0;
         var importeExonerada = 0;
         var importeInafecta = 0;
         var valorImpuesto = 0;
         var cantidad = 0;
         var valorUnitario = 0;
         var importeDescuento = 0;
         var importeFooter = 0;
         var _flagImpuesto = $("#FlagImpuesto").val();
         var ids = jQuery("#jqGridDetalle").jqGrid('getDataIDs');
         $.each(ids, function (item, value) {

             cantidad = stringToDecimal($("#" + value + "_Cantidad").val());
             valorUnitario = stringToDecimal($("#" + value + "_ValorUnitario").val());
             precioDescuento = stringToDecimal($("#" + value + "_ValorDescuento").val());

             var rowData = jQuery('#jqGridDetalle').jqGrid('getRowData', value);
             switch (rowData.TipoImpuesto) {
                 case "@TipoAfectacion.GRAVADO_OPERACION_ONEROSA":
                         descuentoPorcentaje += stringToDecimal($("#" + value + "_PorcentajeDescuento").val());
                         importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                         if (_flagImpuesto == '@LetraConstante.S') {
                             if (precioDescuento != 0) {
                                 importeGravada += (cantidad * precioDescuento) / 1.18;
                                 importeFooter += (cantidad * precioDescuento);
                             } else {
                                 importeGravada += (cantidad * valorUnitario) / 1.18;
                                 importeFooter += (cantidad * valorUnitario);
                             }
                         } else {
                             if (precioDescuento != 0) {
                                 importeGravada += (cantidad * precioDescuento);
                                 importeFooter += (cantidad * precioDescuento);
                             } else {
                                 importeGravada += (cantidad * valorUnitario);
                                 importeFooter += (cantidad * valorUnitario);
                             }
                         }

                         valorImpuesto = (importeGravada * _impuestoNacional) / 100;
                         importeTotal = importeGravada + valorImpuesto;
                         break;
                 case "@TipoAfectacion.EXONERADO_OPERACION_ONEROSA":
                   case "@TipoAfectacion.EXONERADO_TRANFERENCIA_GRATUITA":
                     importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());

                         descuentoPorcentaje += 0;
                         precioDescuento += 0;
                         importeGravada += 0;
                         importeExonerada += (cantidad * valorUnitario);
                         valorImpuesto += 0;
                         importeTotal += importeExonerada;
                         break;
                    case "@TipoAfectacion.INAFECTO_OPERACION_ONEROSA":
                 case "@TipoAfectacion.INAFECTO_TRANSFERENCIA_GRATUITO":
                         importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                         descuentoPorcentaje += 0;
                         precioDescuento += 0;
                         importeExonerada = 0;
                         importeInafecta += (cantidad * valorUnitario);
                         importeGravada += 0;
                         valorImpuesto += 0;
                         importeTotal += importeInafecta;
                         break;
                     case "@TipoAfectacion.GRAVADO_RETIRO_POR_PREMIO":
                     case "@TipoAfectacion.GRAVADO_RETIRO_POR_DONACION":
                     case "@TipoAfectacion.GRAVADO_RETIRO":
                     case "@TipoAfectacion.GRAVADO_POR_RETIRO_PUBLICIDAD":
                     case "@TipoAfectacion.GRAVADO_BONIFICACION":
                     case "@TipoAfectacion.GRAVADO_ENTREGA_TRABAJADORES":
                          importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());

                         break;
                     case "@TipoAfectacion.INAFECTO_RETIRO_BONIFICACION":
                     case "@TipoAfectacion.INAFECTO_RETIRO":
                     case "@TipoAfectacion.INAFECTO_RETIRO_MUESTRA_MEDICA":
                     case "@TipoAfectacion.INAFECTO_RETIRO_CONVENIO_COLECTIVO":
                     case "@TipoAfectacion.INAFECTO_RETIRO_POR_PREMIO":
                     case "@TipoAfectacion.INAFECTO_RETIRO_POR_PUBLICIDAD":
                        importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                         break;
                      case "@TipoAfectacion.EXPORTACION_BIENES_SERVICIO":
                          importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                         break;
                 }
         });

         $("#jqGridDetalle").jqGrid('footerData', 'set', {
               ValorUnitario: valorUnitario,
               Cantidad : cantidad,
               ImporteTotal: importeFooter
         });

         $("#DescuentoItem").val(importeDescuento);
         $("#Descuento").val(importeDescuento);
         $("#TotalExonerado").val(importeExonerada);
         $("#TotalInafecto").val(importeInafecta);
         $("#SubTotal").val(importeGravada);
         $("#TotalImpuesto").val(valorImpuesto);
         $("#TotalPedido").val(importeTotal);
        $("#ValorTotal").val(importeTotal);
     }


    function onChangeRucCliente() {
        var rucCliente = $("#NumeroRuc").val();

        $.post('@Url.Action("BuscarPorRuc")', { numeroRuc: rucCliente }, function (response) {
            if (response.success) {
                $("#ClienteId").empty().trigger('change')
                var data = {  id: response.data.ClienteId,  text: response.data.RazonSocial };
                var newOption = new Option(data.text, data.id, false, false);
                $('#ClienteId').append(newOption).trigger('change');
                $("#NumeroRuc").val(response.data.NumeroDocumento);
                $("#Direccion").val(response.data.NombreVia);
            }
        });
    }

    function onClickFormPago() {
        $("#divFormaPago").modal('show');
    }

    function onClickMenuBar(key) {
        var editAction = $("#EditAction").val();
        switch (key) {
            case '@ButtonMenuBarActionConstant.SAVE':
                InsertData();
                break;
            case '@ButtonMenuBarActionConstant.PRINT':

                break;
            case '@ButtonMenuBarActionConstant.EXIT':
                controllerGetAction('@Url.Action("Bandeja", "NotaVenta", new { area = "op" })', null, 'workspace', false, false, null);
                break;
        }
    }



    function InsertData() {

        if (isEmptyElement("FormaPagoId", "Seleccione forma de pago."))
            return false;

        if (isEmptyElement("MonedaId", "Seleccione moneda."))
            return false;

        if (isEmptyElement("FechaEmision", "Seleccione fecha documento."))
            return false;

        if (isEmptyElement("FechaEntrega", "Seleccione fecha vencimiento."))
            return false;


        if (isEmptyElement("AlmacenId", "Seleccione un almacen."))
            return false;

        if (isEmptyElement("NumeroRuc", "Seleccione un cliente."))
            return false;

        if (isEmptyElement("ClienteId", "Seleccione un cliente."))
            return false;

        gridDataIDs('jqGridDetalle').forEach(function (index) {
            $("#jqGridDetalle").jqGrid('saveRow', index, { url: 'clientArray' });
        });

        var form = $('#form1');
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        var disabled = form.find('select:disabled').removeAttr('disabled');
        var data = $('#jqGridDetalle').getRowData();
        if (jQuery.isEmptyObject(data)) {
            MsgAlert(3, "Selecciona almenos un bien o servicio.");
            return false;
        }
        var jsonData = {
            __RequestVerificationToken: token,
            Header: JSON.stringify($('#form1').serializeObject()),
            Row: JSON.stringify(data),
            EditAction: $("#EditAction").val(),
            Detail: JSON.stringify($('#form3').serializeObject()),
            Form: JSON.stringify($('#divFormaPagoDetalle').serializeObject()),
        };
        controllerSaveResponse("@Url.Action("Create", "NotaVenta", new { area = "op" })", jsonData, true, true, function (response) {
            if (response.success) {
                MsgAlert(1, response.message);
                controllerGetAction('@Url.Action("Bandeja", "NotaVenta", new { area = "op" })', null, 'workspace', false, false, null);
            } else {
                MsgAlert(3, response.message);
                  @*controllerGetAction('@Url.Action("Bandeja", "FacturaVenta", new { area = "op" })', null, 'workspace', false, false, null);*@
            }
            disabled.attr('disabled', 'disabled');
        });
    }

    function onDblClickDireccion(row) {
        $("#Direccion").val(row.NombreDireccion);
        $("#modalDireccion").modal('hide');
    };



    function onClickCliente() {
        $.post('@Url.Action("BuscarPorRuc", "FacturaVenta")', {
            numeroRuc: $("#NumeroRuc").val()
        }, function (response) {
            if (response.success) {
                if (!jQuery.isEmptyObject(response.data)) {
                    $("#ClienteId").val(response.data.ClienteId);
                    $("#NumeroRuc").val(response.data.NumeroDocumento);
                    $("#RazonSocial").val(response.data.RazonSocial);
                    $("#Direccion").val(response.data.NombreVia);
                    var data = [{ id: response.data.ClienteId, text: response.data.RazonSocial }];
                    $("#ClienteId").select2({ data: data });
                }
            } else {
                MsgAlert(3, response.message);
            }
        });
    };

    function onClickProducto() {
        $.post('@Url.Action("GetProducto", "FacturaVenta")', {
            codigo: $("#Producto").val()
        }, function (response) {
            if (response.success) {
                $("#ProductoId").val(response.data.ProductoId);
                $("#Producto").val(response.data.Codigo);
                $("#Descripcion").val(response.data.Descripcion);
                $("#PrecioVenta").val(response.data.PrecioVenta);
            } else {
                MsgAlert(3, response.message);
            }
        });
    };


    function onClickRowCliente(row) {
        $("#ClienteId").val(row.ClienteId);
        $("#Cliente").val(row.Codigo);
        $("#NumeroRuc").val(row.NumeroRuc);
        $("#RazonSocial").val(row.RazonSocial);
        $("#Direccion").val(row.Direccion);
        $("#myModalCliente").modal('hide');
    };

    function onClickRowProducto(row) {
        $("#ProductoId").val(row.ProductoId);
        $("#Producto").val(row.Codigo);
        $("#Descripcion").val(row.Descripcion);
        $("#myModalProducto").modal('hide');
    };

    function onClickOkProducto() {

        var rowKey = jQuery("#jqGridProducto").getGridParam("selrow");
        if (!isEmpty(rowKey)) {

            var jsonList = [];
            var selectedIDs = jQuery("#jqGridProducto").getGridParam("selarrrow");
            $.each(selectedIDs, function (item, value) {
                var rows = jQuery('#jqGridProducto').getRowData(value);
                jsonList.push(jQuery('#jqGridProducto').getRowData(value));
            });

            var rowList = _.map(jsonList, 'BienServicioId');
            var rowObject = [];
            jQuery.ajax({
                type: 'POST',
                url: '@Url.Action("ListarBienPrecio")',
                dataType: 'json',
                cache: false,
                data: {
                    data: JSON.stringify(rowList),
                    tipoPrecioId: $("#TipoPrecioId").val(),
                    monedaId: $("#MonedaId").val(),
                    impuestoId: $("#ImpuestoId").val()
                },
                success: function (response) {
                    debugger;
                    if (response.success) {
                        $.each(response.data.lista, function (item, value) {
                            var bienServicios = {
                                Codigo: value.Codigo,
                                CodigoComercial: value.CodigoComercial,
                                TipoImpuestoId: value.TipoImpuestoId,
                                TipoImpuesto: value.TipoImpuesto,
                                BienAlmacenId: value.BienAlmacenId,
                                BienServicioId: value.BienServicioId,
                                Descripcion: value.Descripcion,
                                ValorUnitario: value.ValorUnitario,
                                Cantidad: value.Cantidad,
                                UnidadMedidaId: value.UnidadMedidaId,
                                MarcaId: value.MarcaId,
                                IncluyeImpuesto: value.IncluyeImpuesto,
                                PorcentajeDescuento: value.PorcentajeDescuento,
                                ValorDescuento: value.ValorDescuento,
                                ImporteDescuento: value.ImporteDescuento,
                                ImporteTotal: value.ImporteTotal,


                            };
                            rowObject.push(bienServicios);
                        });

                        $("#FlagImpuesto").val(response.data.IncluyeImpuesto);
                        $("#SubTotal").val(response.data.SubTotal);
                        $("#Descuento").val(response.data.Descuento);
                        $("#TotalImpuesto").val(response.data.TotalImpuesto);
                        $("#TotalPedido").val(response.data.MontoTotal);

                    } else {
                        MsgAlert(3, response.message);
                    }

                },
                async: false
            });

            var newRowId;
            $.each(rowObject, function (item, value) {
                newRowId = gridRowCount("jqGridDetalle");
                var count = newRowId + 1;
                var cantidad = 1;
                var setcelll = {
                    rowID: newRowId + 1,
                    initdata: {
                        CotizacionRequerimientoBienId: 0,
                        CotizacionRequerimientoId: 0,
                        TipoImpuestoId: value.TipoImpuestoId,
                        TipoImpuesto : value.TipoImpuesto,
                        BienServicioId: value.BienServicioId,
                        BienAlmacenId: value.BienAlmacenId,
                        Codigo: value.Codigo,
                        CodigoComercial: value.CodigoComercial,
                        UnidadMedidaId: value.UnidadMedidaId,
                        Descripcion: value.Descripcion,
                        Cantidad: value.Cantidad,
                        MarcaId: value.MarcaId,
                        ValorUnitario: value.ValorUnitario,
                        PorcentajeDescuento: value.PorcentajeDescuento,
                        ValorDescuento: value.ValorDescuento,
                        ImporteDescuento: value.ImporteDescuento,
                        ImporteTotal: value.ImporteTotal
                    },
                    position: "afterSelected"
                };
                jQuery("#jqGridDetalle").jqGrid('addRow', setcelll);
            });

            jQuery("#myModalProducto").modal('hide');

        } else {
            MsgAlert(2, 'Seleccione almenos un articulo.');
        }

     var descuentoPorcentaje = 0;
     var precioDescuento = 0;
     var importeTotal = 0;
     var importeGravada = 0;
     var importeExonerada = 0;
     var importeInafecta = 0;
     var valorImpuesto = 0;
     var cantidad = 0;
     var valorUnitario = 0;
     var importeDescuento = 0;
     var importeFooter = 0;
     var ids = jQuery("#jqGridDetalle").jqGrid('getDataIDs');
     var _flagImpuesto = $("#FlagImpuesto").val();
     $.each(ids, function (item, value) {

         debugger;
         cantidad = stringToDecimal($("#" + value + "_Cantidad").val());
         valorUnitario = stringToDecimal($("#" + value + "_ValorUnitario").val());
         precioDescuento = stringToDecimal($("#" + value + "_ValorDescuento").val());

         var rowData = jQuery('#jqGridDetalle').jqGrid('getRowData', value);
         switch (rowData.TipoImpuesto) {
             case "@TipoAfectacion.GRAVADO_OPERACION_ONEROSA":
                     descuentoPorcentaje += stringToDecimal($("#" + value + "_PorcentajeDescuento").val());
                 importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                     if (_flagImpuesto == '@LetraConstante.S') {
                         if (precioDescuento != 0) {
                             importeGravada += (cantidad * precioDescuento) / 1.18;
                             importeFooter += (cantidad * valorUnitario);
                         } else {
                             importeGravada += (cantidad * valorUnitario) / 1.18;
                             importeFooter += (cantidad * valorUnitario);
                         }
                     } else {
                         if (precioDescuento != 0) {
                             importeGravada += (cantidad * precioDescuento);
                             importeFooter += (cantidad * precioDescuento);
                         } else {
                             importeGravada += (cantidad * valorUnitario);
                             importeFooter += (cantidad * valorUnitario);
                         }
                     }
                     valorImpuesto = (importeGravada * _impuestoNacional) / 100;
                     importeTotal = importeGravada + valorImpuesto;
                     break;
             case "@TipoAfectacion.EXONERADO_OPERACION_ONEROSA":
               case "@TipoAfectacion.EXONERADO_TRANFERENCIA_GRATUITA":
                 importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());

                     descuentoPorcentaje += 0;
                     precioDescuento += 0;
                     importeGravada += 0;
                     importeExonerada += (cantidad * valorUnitario);
                     valorImpuesto += 0;
                     importeTotal += importeExonerada;
                     break;
                case "@TipoAfectacion.INAFECTO_OPERACION_ONEROSA":
             case "@TipoAfectacion.INAFECTO_TRANSFERENCIA_GRATUITO":
                     importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                     descuentoPorcentaje += 0;
                     precioDescuento += 0;
                     importeExonerada = 0;
                     importeInafecta += (cantidad * valorUnitario);
                     importeGravada += 0;
                     valorImpuesto += 0;
                     importeTotal += importeInafecta;
                     break;
                 case "@TipoAfectacion.GRAVADO_RETIRO_POR_PREMIO":
                 case "@TipoAfectacion.GRAVADO_RETIRO_POR_DONACION":
                 case "@TipoAfectacion.GRAVADO_RETIRO":
                 case "@TipoAfectacion.GRAVADO_POR_RETIRO_PUBLICIDAD":
                 case "@TipoAfectacion.GRAVADO_BONIFICACION":
                 case "@TipoAfectacion.GRAVADO_ENTREGA_TRABAJADORES":
                      importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());

                     break;
                 case "@TipoAfectacion.INAFECTO_RETIRO_BONIFICACION":
                 case "@TipoAfectacion.INAFECTO_RETIRO":
                 case "@TipoAfectacion.INAFECTO_RETIRO_MUESTRA_MEDICA":
                 case "@TipoAfectacion.INAFECTO_RETIRO_CONVENIO_COLECTIVO":
                 case "@TipoAfectacion.INAFECTO_RETIRO_POR_PREMIO":
                 case "@TipoAfectacion.INAFECTO_RETIRO_POR_PUBLICIDAD":
                    importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                     break;
                  case "@TipoAfectacion.EXPORTACION_BIENES_SERVICIO":
                      importeDescuento += stringToDecimal($("#" + value + "_ImporteDescuento").val());
                     break;
             }
     });

     $("#jqGridDetalle").jqGrid('footerData', 'set', {
           ValorUnitario: valorUnitario,
           Cantidad : cantidad,
           ImporteTotal: importeFooter
     });

     $("#DescuentoItem").val(importeDescuento);
     $("#Descuento").val(importeDescuento);
     $("#TotalExonerado").val(importeExonerada);
     $("#TotalInafecto").val(importeInafecta);
     $("#SubTotal").val(importeGravada);
     $("#TotalImpuesto").val(valorImpuesto);
        $("#TotalPedido").val(importeTotal);
        $("#ValorTotal").val(importeTotal);
    }



   function onChangeMovimiento(control) {
        $.post('@Url.Action("GetTipoOperacion")',
         {
             codigo: control.value
         }, function (response) {
             $('#TipoOperacionId').find('option').remove().end();
             $("#TipoOperacionId").addItems(response.data);
             $("#TipoOperacionId").prop("disabled", false);
         });
    };

    function onClickBienesMenuBar(key) {
        switch (key) {
            case "@ButtonMenuBarActionConstant.NEW":
                $('#myModalProducto').modal('show');
                break;
            case "@ButtonMenuBarActionConstant.SAVE":
                InsertData();
                break;
            case "@ButtonMenuBarActionConstant.EDIT":
                var row = getGridSelectedRow('jqGridDetalle');
                var dataIDs = $("#jqGridDetalle").jqGrid('getDataIDs');
                $.each(dataIDs, function (item, value) {
                    $("#jqGridDetalle").jqGrid('editRow', value, true);
                });
                break;
            case '@ButtonMenuBarActionConstant.EXIT':
                  controllerGetAction('@Url.Action("Bandeja", "FacturaVenta", new { area = "OP" })', null, 'workspace', false, false, null);
                break;
        }
    }

     function onChangeDireccion() {
         $("#modalDireccion").modal('show');
     }


    function onClickOkCotiza(row) {
        $('#jqGridDetalle').jqGrid('clearGridData');
        $("#NumeroCotizacion").val(row.Codigo);
        $("#NumeroOrdenCompra").prop('readonly', true);
        $.post('@Url.Action("GetCotizacion", "FacturaVenta")',
            {
                cotizacionRequerimientoId: row.CotizacionRequerimientoId
            }, function (response) {

                var data = { id: response.data.records.ClienteId, text: response.data.records.RazonSocial };
                var newOption = new Option(data.text, data.id, false, false);
                $('#ClienteId').append(newOption).trigger('change');
                $("#Direccion").val(response.data.records.NombreVia);
                $("#NumeroRuc").val(response.data.records.NumeroDocumento);
                $("#FechaEntrega").val(response.data.records.FechaEntrega);
                $('#FormaPagoId').val(response.data.records.FormaPagoId).trigger('change');
                $('#MonedaId').val(response.data.records.MonedaId).trigger('change');
                $('#ImpuestoId').val(response.data.records.ImpuestoId).trigger('change');
                $('#AlmacenId').val(response.data.records.AlmacenId).trigger('change');

                $("#SubTotal").val(response.data.records.SubTotal);
                $("#TotalExonerado").val(response.data.records.TotalExonerado);
                $("#TotalInafecto").val(response.data.records.TotalInafecto);
                $("#TotalImpuesto").val(response.data.records.TotalImpuesto);
                $("#TotalPedido").val(response.data.records.MontoTotal);

                var footValorUnit = 0;
                var footCantidad = 0;
                var importeFooter = 0;
                $.each(response.data.rows, function (item, value) {
                    newRowId = gridRowCount("jqGridDetalle");
                    var count = newRowId + 1;
                    var cantidad = 1;
                    var setcelll = {
                        rowID: newRowId + 1,
                        initdata: {
                            OrdenCompraBienId: 0,
                            OrdenCompraId: 0,
                            Codigo: value.Codigo,
                            CodigoComercial: value.CodigoComercial,
                            TipoImpuesto: value.TipoImpuesto,
                            PesoNeto: value.PesoNeto,
                            PesoBruto: value.PesoBruto,
                            BienServicioId: value.BienServicioId,
                            BienAlmacenId: value.BienAlmacenId,
                            UnidadMedidaId: value.UnidadMedidaId,
                            Descripcion: value.Descripcion,
                            ValorUnitario: value.ValorUnitario,
                            Cantidad: value.Cantidad,
                            PorcentajeDescuento: value.PorcentajeDescuento,
                            ValorDescuento: value.ValorDescuento,
                            ImporteDescuento: value.ImporteDescuento,
                            ImporteTotal: value.ImporteTotal
                        },
                        position: "afterSelected"
                    };
                    footValorUnit += value.ValorUnitario;
                    footCantidad += value.Cantidad;
                    importeFooter += value.ImporteTotal;
                    jQuery("#jqGridDetalle").jqGrid('addRow', setcelll);

                    $("#jqGridDetalle").jqGrid('footerData', 'set', {
                        ValorUnitario: footValorUnit,
                        Cantidad: footCantidad,
                        ImporteTotal: importeFooter
                    });

                });
            });

        $("#myModalCotiza").modal('hide');
    }

    function onClickOkOrdenCom(row) {
         var rows = row;
         if (jQuery.isEmptyObject(rows)) {
             rows = getGridSelectedRow("jqGridOrdenCompra");
         }
         if (jQuery.isEmptyObject(rows)) {
             MsgAlert(3, "Seleccion orden de compra");
             return false;
         }


        $('#jqGridDetalle').jqGrid('clearGridData');
        $("#NumeroOrdenCompra").val(rows.OrdenCompra);
        $("#NumeroCotizacion").prop('readonly', true);

        $.post('@Url.Action("GetOrdenCompra", "FacturaVenta")',
          {
                ordenCompraId: row.OrdenCompraId
         }, function (response) {

             var data = { id: response.data.records.ClienteId, text: response.data.records.RazonSocial };
             var newOption = new Option(data.text, data.id, false, false);
             $('#ClienteId').append(newOption).trigger('change');
             $("#Direccion").val(response.data.records.NombreVia);
             $("#NumeroRuc").val(response.data.records.NumeroDocumento);
             $("#FechaEntrega").val(response.data.records.FechaEntrega);
             $('#FormaPagoId').val(response.data.records.FormaPagoId).trigger('change');
             $('#MonedaId').val(response.data.records.MonedaId).trigger('change');
             $('#ImpuestoId').val(response.data.records.ImpuestoId).trigger('change');
             $('#AlmacenId').val(response.data.records.AlmacenId).trigger('change');

             $("#SubTotal").val(response.data.records.SubTotal);
             $("#TotalExonerado").val(response.data.records.TotalExonerado);
             $("#TotalInafecto").val(response.data.records.TotalInafecto);
             $("#TotalImpuesto").val(response.data.records.TotalImpuesto);
             $("#TotalPedido").val(response.data.records.MontoTotal);

              var footValorUnit = 0;
              var footCantidad = 0;
              var importeFooter = 0;
             $.each(response.data.rows, function (item, value) {
                 newRowId = gridRowCount("jqGridDetalle");
                 var count = newRowId + 1;
                 var cantidad = 1;
                 var setcelll = {
                     rowID: newRowId + 1,
                     initdata: {
                         OrdenCompraBienId: 0,
                         OrdenCompraId: 0,
                         Codigo: value.Codigo,
                         CodigoComercial: value.CodigoComercial,
                         TipoImpuesto: value.TipoImpuesto,
                         PesoNeto: value.PesoNeto,
                         PesoBruto: value.PesoBruto,
                         BienServicioId: value.BienServicioId,
                         UnidadMedidaId: value.UnidadMedidaId,
                         BienAlmacenId: value.BienAlmacenId,
                         Descripcion: value.Descripcion,
                         ValorUnitario: value.ValorUnitario,
                         Cantidad: value.Cantidad,
                         PorcentajeDescuento: value.PorcentajeDescuento,
                         ValorDescuento: value.ValorDescuento,
                         ImporteDescuento: value.ImporteDescuento,
                         ImporteTotal: value.ImporteTotal
                     },
                     position: "afterSelected"
                 };
                 jQuery("#jqGridDetalle").jqGrid('addRow', setcelll);
                 footValorUnit += value.ValorUnitario;
                 footCantidad += value.Cantidad;
                 importeFooter += value.ImporteTotal;
                 $("#jqGridDetalle").jqGrid('footerData', 'set', {
                     ValorUnitario: footValorUnit,
                     Cantidad: footCantidad,
                     ImporteTotal: importeFooter
                 });

             });
         });

        $("#myModalOrdenCompra").modal('hide');
    }

    function onChangeImpuesto(control) {

        debugger;
        var data = $('#jqGridDetalle').getRowData();
        if (!isEmpty(data)) {

            var jsonList = [];

            var rowList = _.map(data, 'BienServicioId');
            var rowObject = [];
            jQuery.ajax({
                type: 'POST',
                url: '@Url.Action("ListarBienPrecio")',
                dataType: 'json',
                cache: false,
                async: false,
                data: {
                    data: JSON.stringify(rowList),
                    tipoPrecioId: $("#TipoPrecioId").val(),
                    monedaId: $("#MonedaId").val(),
                    impuestoId: $("#ImpuestoId").val()
                },
                success: function (response) {
                    if (response.success) {
                        $.each(response.data.lista, function (item, value) {
                            var bienServicios = {
                                Codigo: value.Codigo,
                                CodigoComercial: value.CodigoComercial,
                                BienServicioId: value.BienServicioId,
                                BienAlmacenId: value.BienAlmacenId,
                                IncluyeImpuesto: value.IncluyeImpuesto,
                                Descripcion: value.Descripcion,
                                ValorUnitario: value.ValorUnitario,
                                Cantidad: value.Cantidad,
                                UnidadMedidaId: value.UnidadMedidaId,
                                MarcaId: value.MarcaId,
                                PorcentajeDescuento: value.PorcentajeDescuento,
                                ValorDescuento: value.ValorDescuento,
                                ImporteDescuento: value.ImporteDescuento,
                                ImporteTotal: value.ImporteTotal,
                                TipoImpuesto: value.TipoImpuesto,
                            };
                            rowObject.push(bienServicios);
                        });
                        $("#FlagImpuesto").val(response.data.IncluyeImpuesto);
                        $("#SubTotal").val(response.data.SubTotal);
                        $("#Descuento").val(response.data.Descuento);
                        $("#TotalImpuesto").val(response.data.TotalImpuesto);
                        $("#TotalPedido").val(response.data.MontoTotal);
                    } else {
                        MsgAlert(3, response.message);
                    }

                }

            });

            var valorUnitario = 0;
            var importeFooter = 0;
            var cantidad = 0;
            $.each(rowObject, function (item, value) {
                var rowId = 1;
                $.each(data, function (id, val) {
                    if (value.BienServicioId == val.BienServicioId) {
                        valorUnitario += value.ValorUnitario;
                        importeFooter += value.ImporteTotal;
                        cantidad += value.Cantidad;
                        $("#" + rowId + "_ValorUnitario").val(value.ValorUnitario);
                        $("#" + rowId + "_PorcentajeDescuento").val(value.PorcentajeDescuento);
                        $("#" + rowId + "_ValorDescuento").val(value.ValorDescuento);
                        $("#" + rowId + "_ImporteDescuento").val(value.ImporteDescuento);
                        $("#" + rowId + "_Cantidad").val(value.Cantidad);
                        jQuery('#jqGridDetalle').jqGrid("setCell", rowId, "ImporteTotal", value.ImporteTotal);
                    }
                    rowId++;
                });
            });

            $("#jqGridDetalle").jqGrid('footerData', 'set', {
                ValorUnitario: valorUnitario,
                Cantidad: cantidad,
                ImporteTotal: importeFooter
            });

        } else {
            //MsgAlert(2, 'Seleccione almenos un articulo.');
        }
    }

    function onClickClienteNuevo() {
        $("#myModalCliente").modal('show');
    }

     function onClickCreateCliente() {
      if (isEmptyElement("DocumentoIdentidadId", "Seleccione documento identidad"))
            return false;

        if (isEmptyElement("NumeroDocumento", "Ingrese numero documento identidad"))
            return false;

        if (isEmptyElement("TipoPersonaId", "Seleccione tipo proveedor"))
            return false;

         if ($("#DocumentoIdentidadId").val() == "27") {
             if (isEmptyElement("RazonSocial", "Ingrese el campo Razon Social"))
                 return false;

             if (isEmptyElement("NombreComercial", "Ingrese el campo nombre comercial"))
                 return false;
         } else {
             if (isEmptyElement("Nombres", "Ingrese el campo nombres"))
                 return false;

             if (isEmptyElement("ApellidoPaterno", "Ingrese el campo apellido paterno"))
                 return false;

             if (isEmptyElement("ApellidoMaterno", "Ingrese el campo apellido materno"))
                 return false;
         }



        if (isEmptyElement("PersonalId", "Seleccione Asesor"))
            return false;



        var jsonData = {
            Header: JSON.stringify($('#modalContentCliente').serializeObject()),
            EditAction:'1'
        };
        controllerSaveResponse("@Url.Action("CrearCliente", "Cliente", new { area = "am" })", jsonData, true, true, function (response) {
            if (response.success) {
                MsgAlert(1, response.message);
                $("#NumeroRuc").val(response.data.NumeroDocumento);
                var data = { id: response.data.ClienteId, text: response.data.RazonSocial };
                var newOption = new Option(data.text, data.id, false, false);
                $('#ClienteId').append(newOption).trigger('change');
                $("#Direccion").val(response.data.NombreVia);
                $("#myModalCliente").modal('hide');
            } else {
                MsgAlert(4, response.message);
            }
        });
    }

    function onChangeFormaPago(control)
    {
        document.getElementsByClassName('cuotas')[0].value='0';
        var postData = {
            formaPagoId: control.value,
            monto: document.getElementById("TotalPedido").value,
            cantidad: document.getElementsByClassName('cuotas')[0].value
        };
        controllerGetAction('@Url.Action("FormaPagosDetalle", "FacturaVenta")', postData, 'divFormaPagoDetalle', true, true, null);
    }

    document.getElementById('btnAddItem').addEventListener('click', () => {
        var postData = {
            Header: JSON.stringify($('#divFormaPagoDetalle').serializeObject()),
            formaPagoId: document.getElementById("FormaPagoId").value,
            monto: document.getElementById("TotalPedido").value,
            cantidad: document.getElementsByClassName('cuotas')[0].value
        };
        controllerPostJsonToHtml("@Url.Action("FormaPagosDetalle", "FacturaVenta")", postData,'divFormaPagoDetalle',true, true, null);

    });
</script>
