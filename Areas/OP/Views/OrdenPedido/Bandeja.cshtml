@using eRPBusiness.Helpers
@{
    ViewData["Title"] = "Index";
}
<div class="row">
    <div class="col-lg-12">
        <nav class="btn-toolbar text-left titleuser">
            <a href="#" data-toggle="sidebar"><span class="glyphicon glyphicon-option-vertical"></span></a>
            <label>Listado Orden Pedido</label>
        </nav>
    </div>
</div>
@Html.CRM().MenuBar("MenuBar", "onClickMenuBar", new ItemMenuBar[]{
                           new ItemMenuBar(MenuBarButtonType.New),
                           new ItemMenuBar(MenuBarButtonType.Edit),
                           new ItemMenuBar(MenuBarButtonType.Finalizar),
                           new ItemMenuBar("_MB_GENER_FACT", "Generar Factura","_FACTURA","glyphicon glyphicon-book",false),
                           new ItemMenuBar("_MB_GENER_BOLET", "Generar Boleta","_BOLETA","glyphicon glyphicon-book",false),
                           new ItemMenuBar(MenuBarButtonType.Print,false)
                       })
<div class="row">
    <div class="col-lg-12" id="seachPanel">
        <div class="panel panel-default">
            <div class="panel-body form-horizontal">
                <div class="col-lg-11">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.CRM().TextBox("Codigo", null, "col-lg-4", "Código", "col-lg-2").Attributes(new { @placeholder = "Código" })
                            @Html.CRM().Select2List("EstadoOperacionId", null, ViewBag.EstadoOperacionList, "col-lg-4", "Estado", "col-lg-2")
                        </div>
                        <div class="form-group">
                            @Html.CRM().DateTimePicker("FechaPedido", null, "col-lg-4", "Pedido", "col-lg-2").PickerType(DateTimePickerType.Date).Attributes(new { @placeholder = "Fecha Pedido" })
                            @Html.CRM().DateTimePicker("FechaEntrega", null, "col-lg-4", "Entrega", "col-lg-2").PickerType(DateTimePickerType.Date).Attributes(new { @placeholder = "Fecha Entrega" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        @Html.CRM().TextBox("RazonSocial", null, "col-lg-10", "Proveedor", "col-lg-2").Attributes(new { @placeholder = "Razon Social" })
                    </div>
                </div>
                <div class="col-lg-1">
                    <div class="form-group">
                        @(Html.CRM().InputButton("buttonBuscar", new { Styles = "width:100%" }).ElementType(ButtonElementType.Button).Value("Buscar").OnClick("$('#jqGridPedido').jqGrid('setGridParam',{datatype:'json'}).trigger('reloadGrid');"))
                    </div>
                    <div class="form-group">
                        @(Html.CRM().InputButton("buttonBuscar", new { Styles = "width:100%" }).ElementType(ButtonElementType.Button).Value("Limpiar").OnClick("$('input:text').val('');$('#DocumentoComercialId').val('').trigger('change'); $('#jqGridPedido').jqGrid('setGridParam',{datatype:'json'}).trigger('reloadGrid');"))
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-12" id="bandeja">
        <div class="panel panel-default">
            <div class="panel-body" id="panel">
                <table id="jqGridPedido"></table>
                <div id="jqGridPager"></div>
            </div>
        </div>
    </div>
</div>

@using (Html.CRM().Popup("myModalReporte", "Reporte Orden Compra", "onClickOkReporte", SizePopup.Large))
{
    <div class="row">
        <div class="col-lg-12">
            <div id="PDFViewer">
                <div id="PDFViewer" width="850" height="442"></div>
            </div>
        </div>
    </div>
}
<style type="text/css">


    #MenuBar__MB_GENER_FACT {
        font-size: 12px;
        width: 127px;
        vertical-align: central;
        background-color: #FFB12E;
        border-color: #FFB12E;
        color: #fff;
    }

    #MenuBar__MB_GENER_BOLET {
        font-size: 12px;
        width: 127px;
        vertical-align: central;
        background-color: #448EF0;
        border-color: #448EF0;
        color: #fff;
    }

    #MenuBar__MB_FINALIZAR {
        font-size: 12px;
        width: 127px;
        vertical-align: central;
        background-color: #009494;
        border-color: #009494;
        color: #fff;
    }
</style>
<script type="text/javascript">
    var _heightGrid = getHeightForResize(75);
    var _widthPanel = $("#panel").width();
    $(document).ready(function () {

        $("#jqGridPedido").jqGrid({
            url: '@Url.Action("ListarBandeja", "OrdenPedido", new { area = "op" })',
            mtype: "POST",
            postData: {
                codigo: function () { return $("#Codigo").val() },
                fechaPedido: function () { return $("#FechaPedido").val() },
                razonSocial: function () { return $("#RazonSocial").val() },
                estadoOperacionId: function () { return $("#EstadoOperacionId").val() }
            },
            datatype: "json",
            colModel: [
                { label: 'Id', name: 'OrdenCompraId', key: true, hidden: true },
                { label: '', name: 'Operacion', hidden: true },
                { label: 'Código', name: 'Codigo', width: 17, align: 'center', formatter: colorCellCodigo },
                { label: 'Cotización', name: 'NumeroCotizacion', width: 15, align: 'center', formatter: colorCellCodigo },
                { label: 'Estado', name: 'EstadoOperacion', width: 16, align: 'center', formatter: colorCell },
                { label: 'Fecha Emisión', name: 'FechaEmision', width: 15, align: 'center', sortable: false },
                { label: 'Fecha Entrega', name: 'FechaEntrega', width: 15, align: 'center', sortable: false },
                { label: 'Tipo Doc.', name: 'DocumentoIdentidad', width: 14, sortable: false},
                { label: 'Cliente', name: 'Cliente', width: 70, sortable: false},
                { label: 'Moneda', name: 'Moneda', width: 9, sortable: false ,align: 'center'},
                {
                    label: 'Cantidad', name: 'Cantidad', width: 12, formatter: 'integer', align: 'right', formatoptions: {
                        decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2
                    }
                },
                {
                    label: 'Sub Total', name: 'SubTotal', width: 14, formatter: 'integer', align: 'right', formatoptions: {
                        decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2
                    }
                },
                 {
                     label: 'Impuesto', name: 'TotalImpuesto', width: 13, formatter: 'integer', align: 'right', formatoptions: {
                         decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2
                     }
                 },
                {
                    label: 'Total', name: 'MontoTotal', width: 13, formatter: 'integer', align: 'right', formatoptions: {
                        decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2
                    }
                }
            ],
            viewrecords: true,
            loadonce: true,
            height: (_heightGrid - 130),
            width: _widthPanel,
            rowNum: 20,
            rowList: [10, 20, 30],
            subGrid: true,
            subGridRowExpanded: showChildGrid, subGridOptions: {
                reloadOnExpand: false,
                selectOnExpand: true
            },
            pager: "#jqGridPager"
        });
    });

    function showChildGrid(parentRowID, parentRowKey) {
        var rowData = jQuery("#jqGridPedido").getRowData(parentRowKey);
        var childGridID = parentRowID + "_table";
        var childGridPagerID = parentRowID + "_pager";
        var childGridURL = parentRowKey + ".json";
        $('#' + parentRowID).append('<table id=' + childGridID + '></table><div id=' + childGridPagerID + ' class=scroll></div>');

        $("#" + childGridID).jqGrid({
            url: '@Url.Action("ListarDetalle", "OrdenPedido", new { area = "op" })',
            mtype: "POST",
            postData: {
                ordenCompraId: rowData["OrdenCompraId"]
            },
            datatype: "json",
            page: 1,
            colModel: [
                { label: '', name: 'OrdenId', key: true, hidden: true },
                { label: 'Código', name: 'Codigo', width: 50 },
                { label: 'Cód Comercial', name: 'CodigoComercial', width: 50 },
                { label: 'Descripcion', name: 'Descripcion', width: 150 },
                { label: 'U.M', name: 'Nombre', width: 30 },
                {
                    label: 'Cantidad', name: 'Cantidad', width: 50, formatter: 'integer', align: 'right', formatoptions: {
                        decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2
                    }
                },
                {
                    label: 'Valor Unitario', name: 'ValorUnitario', width: 50, formatter: 'integer', align: 'right', formatoptions: {
                        decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2
                    }
                },
                {
                    label: 'Importe', name: 'ImporteTotal', width: 50, formatter: 'integer', align: 'right', formatoptions: {
                        decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2
                    }
                }
            ],
            loadonce: true,
            width: 960,
            height: '100%',
            footerrow: true,
            loadComplete: function () {
                var grid = $(this);
                total = grid.jqGrid('getCol', 'ImporteTotal', false, 'sum');
                var precioUnitaro = grid.jqGrid('getCol', 'ValorUnitario', false, 'sum');
                var cantidad = grid.jqGrid('getCol', 'Cantidad', false, 'sum');
                grid.jqGrid('footerData', 'set', { ValorUnitario: precioUnitaro, Cantidad: cantidad, ImporteTotal: total });

            },
            pager: "#" + childGridPagerID
        });

    };

    function colorCell(cellvalue, options, rowObject) {
        var backgroud = '', colorHex = '';
        switch (rowObject.Operacion) {
            case 'P':
                colorHex = '#3593E0';
                break;
            case 'A':
                colorHex = '#009494';
                break;
            case 'D':
                colorHex = '#F08D00';
                break;
            case 'C':
                colorHex = '#F02F04';
                break;
            case 'T':
                colorHex = '#1CD9C9';
                break;
            case 'E':
                colorHex = '#F52800';
                break;
            default:
                return cellvalue;
                break;
        }
        backgroud = '<span style="background-color: ' + colorHex + '; display: block; width: 100%; height: 100%; color:#fff; ">' + cellvalue + '</span>';
        return backgroud;
    }

    function colorCellCodigo(cellvalue, options, rowObject) {
        var backgroud = '<b>' + cellvalue + '</b>';
        return backgroud;
    }
    function onClickMenuBar(control) {

        var postData = {
            editAction: '',
            ordenCompraId: 0
        };
        var row = getGridSelectedRow("jqGridPedido");
        switch (control) {
            case "@ButtonMenuBarActionConstant.NEW":
                postData.editAction = '@EditActionConstant.NEW';
                controllerGetAction('@Url.Action("Create", "OrdenPedido", new { area = "op" })', postData, 'workspace', true, true, null);
                break;
            case "@ButtonMenuBarActionConstant.EDIT":
                if (!isEmpty(row)) {
                    postData.editAction = '@EditActionConstant.EDIT';
                    postData.ordenCompraId = row.OrdenCompraId;
                    controllerGetAction('@Url.Action("Create", "OrdenPedido", new { area = "op" })', postData, 'workspace', true, true, null);
                } else {
                    MsgAlert(3, 'Seleccione una orden compra');
                }
                break;
               case "_FACTURA":
                if (!isEmpty(row)) {
                    postData.editAction = '@EditActionConstant.NEW';
                    postData.ordenCompraId = row.OrdenCompraId;
                    controllerGetAction('@Url.Action("Facturar", "OrdenPedido", new { area = "op" })', postData, 'workspace', true, true, null);
                } else {
                    MsgAlert(3, 'Seleccione un pedido');
                }
                break;
              case "_BOLETA":
                if (!isEmpty(row)) {
                    postData.editAction = '@EditActionConstant.NEW';
                    postData.ordenCompraId = row.OrdenCompraId;
                    controllerGetAction('@Url.Action("Boleta", "OrdenPedido", new { area = "op" })', postData, 'workspace', true, true, null);
                } else {
                    MsgAlert(3, 'Seleccione un pedido');
                }
                break;
            case "@ButtonMenuBarActionConstant.PRINT":
                 if (!isEmpty(row)) {
                     var url = '@Url.Action("Reporte", "OrdenPedido", new { @ordenCompraId =  "value"})';
                     var _urlPdf = url.replace("value", row.OrdenCompraId);
                     PDFObject.embed(_urlPdf, "#PDFViewer");
                     $("#myModalReporte").modal('show');

                } else {
                    MsgAlert(3, 'Seleccione para ver el detalle');
                }

                break;
            case "@ButtonMenuBarActionConstant.FINALIZAR":
                 if (!isEmpty(row)) {

                     Swal.fire({
                         title: 'Dar por finalizado esta orden de pedido?',
                         text: "No podrá revertir esto!",
                         icon: 'warning',
                         showCancelButton: true,
                         confirmButtonColor: '#3085d6',
                         cancelButtonColor: '#d33',
                         confirmButtonText: 'Sí'
                     }).then((result) => {
                         if (result.isConfirmed) {
                             Swal.fire(
                                 'Deleted!',
                                 'Your file has been deleted.',
                                 'success'
                             )
                         }
                     })
                } else {
                    MsgAlert(3, 'Seleccione para ver el detalle');
                }

                break;
        }
    };

    function onChangeDocComercial()
    {
        $('#jqGridPedido').jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
    }
</script>
