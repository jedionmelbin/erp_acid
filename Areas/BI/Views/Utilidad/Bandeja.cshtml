@using eRPBusiness.Helpers
@model eRPBusiness.Transport.VentaReporteDTO
@{
    ViewData["Title"] = "Index";
}

<div class="row">
    <div class="col-lg-12">
        <nav class="btn-toolbar text-left titleuser">
            <a href="#" data-toggle="sidebar"><span class="glyphicon glyphicon-option-vertical"></span></a>
            <label>Utilidad</label>
        </nav>
    </div>
</div>
@Html.CRM().MenuBar("MenuBar", "onClickMenuBar", new ItemMenuBar[]{
                                                   new ItemMenuBar(MenuBarButtonType.ExportXls),
                                                   new ItemMenuBar(MenuBarButtonType.Utility),
                                               })
<div class="row">

    <div class="col-lg-12" id="seachPanel">
        <div class="panel panel-default">
            <div class="panel-body form-horizontal">
                <div class="col-lg-11" id="panelSeach">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.CRM().DateTimePicker("FechaInicio", Model.FechaInicio, "col-lg-4", "Fecha Inicio", "col-lg-2").PickerType(DateTimePickerType.Date).Attributes(new { @placeholder = "Fecha Inicio" })
                                @Html.CRM().DateTimePicker("FechaFinal", Model.FechaFinal, "col-lg-4", "Fecha Final", "col-lg-2").PickerType(DateTimePickerType.Date).Attributes(new { @placeholder = "Fecha Final" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                @*@Html.CRM().Select2List("PersonalId", null, @ViewBag.PersonalList, "col-lg-10", "Personal", "col-lg-2")*@
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-1">
                    <div class="form-group">
                        @(Html.CRM().InputButton("buttonBuscar", new { Styles = "width:100%" }).ElementType(ButtonElementType.Button).Value("Buscar").OnClick("$('#jqGridBandeja').jqGrid('setGridParam',{datatype:'json'}).trigger('reloadGrid');"))
                    </div>
                    <div class="form-group">
                        @(Html.CRM().InputButton("buttonBuscar", new { Styles = "width:100%" }).ElementType(ButtonElementType.Button).Value("Limpiar").OnClick("$('input:text').val(''); $('#jqGridBandeja').jqGrid('setGridParam',{datatype:'json'}).trigger('reloadGrid');"))
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-12" id="bandeja">
        <div class="panel panel-default">
            <div class="panel-body" id="panel">
                <table id="jqGridBandeja"></table>
                <div id="jqGridPager"></div>
            </div>
        </div>
    </div>
</div>



<script type="text/javascript">
    var _heightGrid = getHeightForResize(75);
    var _widthPanel = $("#panel").width();
    $(document).ready(function () {

        $("#jqGridBandeja").jqGrid({
            url: '@Url.Action("ListarBandeja", "Utilidad", new { area = "bi" })',
            mtype: "POST",
            postData: {
                fechaInicio: function () { return $("#FechaInicio").val() },
                fechaFinal: function () { return $("#FechaFinal").val() },
                personalId: function () { return $("#PersonalId").val() }
            },
            datatype: "json",
            colModel: [
                { label: '', name: 'UsuarioId', key: true, hidden: true },
                { label: 'Usuario', name: 'Usuario', width: 20, hidden:true },
                { label: 'Cliente', name: 'Denominacion', width: 420 },
                { label: 'Cód. Comercial', name: 'CodigoComercial', width: 150 },
                { label: 'Producto', name: 'Descripcion', width: 400 },
                { label: 'Moneda', name: 'Moneda', width: 80 },
                { label: 'Pasarela', name: 'Pasarela', width: 80,align:'center' },
                { label: 'Cantidad', name: 'Cantidad', width: 90, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },
                { label: 'Costo Unit. s/n IGV', name: 'CostoUnitarioSnIgv', width: 130, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },
                { label: 'Costo Unit. c/n IGV', name: 'CostoUnitarioCnIgv', width: 130, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },

                { label: 'Costo Pasarela s/n IGV', name: 'CostoPasarelaSnIgv', width: 140, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },
                { label: 'Costo Pasarela c/n IGV', name: 'CostoPasarelaCnIgv', width: 140, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },

                { label: 'Costo Unitario', name: 'CostoUnitario', width: 100, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },


                { label: 'Margen Utilidad %', name: 'MargenLista', width: 100, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2, suffix: " %"}},
                { label: 'Precio Unit. s/n IGV', name: 'PrecioUnitarioSnIgv', width: 140, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 }},
                { label: 'Precio Unit. c/n IGV', name: 'PrecioUnitarioCnIgv', width: 140, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },
                { label: 'Utilidad s/n IGV', name: 'UtilidadSnIgv', width: 100, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },
                { label: 'Utilidad c/n IGV', name: 'UtilidadCnIgv', width: 100, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },


                { label: '% Utilidad s/n IGV', name: 'PorcenajeSnIgv', width: 130, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2, suffix: " %" } },
                { label: '% Utilidad c/n IGV', name: 'PorcenajeCnIgv', width: 130, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2, suffix: " %"} },

                { label: 'Impuesto SUNAT', name: 'ImpuestoSunat', width: 125, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },
                { label: 'Renta Porcentaje', name: 'RentaPorcentaje', width: 110, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2, suffix: " %" } },
                { label: 'Impuesto Renta', name: 'ImpuestoRenta', width: 110, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },
                { label: 'Impuesto Total', name: 'ImpuestoTotal', width: 110, formatter: 'integer', align: 'right', sortable: false, formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },
            ],
            viewrecords: true,
            loadonce: true,
            rownumbers: true, // show row numbers
            autowidth: true,
            shrinkToFit: false,
            height: (_heightGrid - 180),
            width: _widthPanel,
            loadComplete: function () {
                var rows = $(this).getDataIDs();
                $.each(rows, function (item, value) {
                    jQuery("#jqGridBandeja").setCell(value, 'RazonSocial', '', { 'color': '#243EF2', 'font-weight': 'bold' });

                    jQuery("#jqGridBandeja").setCell(value, 'Pasarela', '', { 'color': '#243EF2', 'font-weight': 'bold' });

                    jQuery("#jqGridBandeja").setCell(value, 'CostoUnitarioSnIgv', '', { 'color': '#FFFFFF', 'background-color': 'rgba(237,103,12,0.8)', 'font-weight': 'bold' });
                    jQuery("#jqGridBandeja").setCell(value, 'CostoUnitarioCnIgv', '', { 'color': '#FFFFFF', 'background-color': 'rgba(237,103,12,0.8)', 'font-weight': 'bold' });

                    jQuery("#jqGridBandeja").setCell(value, 'MargenLista', '', { 'color': '#FFFFFF', 'background-color': 'rgba(230,94,114,0.8)', 'font-weight': 'bold' });
                    jQuery("#jqGridBandeja").setCell(value, 'CostoUnitario', '', { 'color': '#FFFFFF', 'background-color': 'rgba(45,146,252,0.7)', 'font-weight': 'bold' });


                    jQuery("#jqGridBandeja").setCell(value, 'UtilidadSnIgv', '', { 'color': '#FFFFFF', 'background-color': 'rgba(42,168,59,0.7)', 'font-weight': 'bold' });
                    jQuery("#jqGridBandeja").setCell(value, 'UtilidadCnIgv', '', { 'color': '#FFFFFF', 'background-color': 'rgba(42,168,59,0.7)', 'font-weight': 'bold' });

                    jQuery("#jqGridBandeja").setCell(value, 'PrecioUnitarioSnIgv', '', { 'color': '#FFFFFF', 'background-color': 'rgba(245,159,5,0.7)', 'font-weight': 'bold' });
                    jQuery("#jqGridBandeja").setCell(value, 'PrecioUnitarioCnIgv', '', { 'color': '#FFFFFF', 'background-color': 'rgba(245,159,5,0.7)', 'font-weight': 'bold' });


                    jQuery("#jqGridBandeja").setCell(value, 'ImpuestoSunat', '', { 'color': '#FFFFFF', 'background-color': 'rgba(191,9,9,0.7)', 'font-weight': 'bold' });
                    //jQuery("#jqGridBandeja").setCell(value, 'RentaPorcentaje', '', { 'color': '#FFFFFF', 'background-color': 'rgba(191,9,9,0.7)', 'font-weight': 'bold' });
                    jQuery("#jqGridBandeja").setCell(value, 'ImpuestoRenta', '', { 'color': '#FFFFFF', 'background-color': 'rgba(191,9,9,0.7)', 'font-weight': 'bold' });
                    jQuery("#jqGridBandeja").setCell(value, 'ImpuestoTotal', '', { 'color': '#FFFFFF', 'background-color': 'rgba(191,9,9,0.7)', 'font-weight': 'bold' });
                });
            },
            rowNum: 20,
            rowList: [10, 20, 30],
            pager: "#jqGridPager"
        });


        $('#jqGridBandeja').setGroupHeaders(
            {
                useColSpanStyle: true,
                groupHeaders: [
                    { "numberOfColumns": 5, "titleText": "Información General", "startColumnName": "Denominacion" },
                    { "numberOfColumns": 13, "titleText": "Margen Utilidad", "startColumnName": "Cantidad" },
                    { "numberOfColumns": 4, "titleText": "Impuesto SUNAT", "startColumnName": "ImpuestoSunat" },
                    //{ "numberOfColumns": 3, "titleText": "Saldo", "startColumnName": "CantidadSaldo" }
                ]
            });
    });

    function onClickMenuBar(control) {
        var postData = {
            editAction: '',
            personalId: 0
        };
        var row = getGridSelectedRow("jqGridBandeja");
        switch (control) {
            case "@ButtonMenuBarActionConstant.NEW":

                break;
            case "@ButtonMenuBarActionConstant.EDIT":

                break;
            case "@ButtonMenuBarActionConstant.EXPORT_XLS":
                $.fileDownload('@Url.Action("FileExport")', {
                    httpMethod: 'POST',
                    dataType: "json",
                    contentType: "application/json",
                    data: {
                        fechaInicio: function () { return $("#FechaInicio").val() },
                        fechaFinal: function () { return $("#FechaFinal").val() },
                        personalId: function () { return $("#PersonalId").val() }
                    },
                    successCallback: function (url) {

                    },
                    failCallback: function (responseHtml, url) {

                    }
                });
                break;
            case "@ButtonMenuBarActionConstant.UTILITY":
                $.fileDownload('@Url.Action("FileExportUtility")', {
                    httpMethod: 'POST',
                    dataType: "json",
                    contentType: "application/json",
                    data: {
                        fechaInicio: function () { return $("#FechaInicio").val() },
                        fechaFinal: function () { return $("#FechaFinal").val() }
                    },
                    successCallback: function (url) {

                    },
                    failCallback: function (responseHtml, url) {

                    }
                });
                break;
        }
    };



</script>

